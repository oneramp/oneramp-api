{
  "openapi": "3.0.0",
  "paths": {
    "/health": {
      "get": {
        "operationId": "HealthController_check",
        "summary": "Check for the application health",
        "description": "This endpoint is used to check for the health of the application",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "HEALTH"
        ]
      }
    },
    "/api/v3/integrator": {
      "post": {
        "operationId": "IntegratorController_createIntegrator",
        "summary": "Create an integrator",
        "description": "This endpoint will help you create an integrator",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "string",
                    "description": "organization",
                    "example": "A&B Company"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "first_name",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "last_name",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "email",
                    "example": "ab@gmail.com"
                  },
                  "phone": {
                    "type": "string",
                    "description": "phone",
                    "example": "+xxx xxx xxx xxx"
                  },
                  "country_code": {
                    "type": "string",
                    "description": "country_code",
                    "example": "US"
                  }
                },
                "required": [
                  "organization",
                  "first_name",
                  "last_name",
                  "email",
                  "phone",
                  "country_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "The record has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "id",
                          "example": "xxxxxxxxxxxxxxxxxxxxxxxx"
                        },
                        "organization": {
                          "type": "string",
                          "description": "organization",
                          "example": "A&B Company"
                        },
                        "first_name": {
                          "type": "string",
                          "description": "first_name",
                          "example": "John"
                        },
                        "last_name": {
                          "type": "string",
                          "description": "last_name",
                          "example": "Doe"
                        },
                        "email": {
                          "type": "string",
                          "description": "email",
                          "example": "ab@gmail.com"
                        },
                        "phone": {
                          "type": "string",
                          "description": "phone",
                          "example": "+xxx xxx xxx xxx"
                        }
                      },
                      "required": [
                        "organization",
                        "first_name",
                        "last_name",
                        "email",
                        "phone"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "INTEGRATOR"
        ]
      },
      "get": {
        "operationId": "IntegratorController_getIntegrator",
        "summary": "Get an Integrator Details.",
        "description": "This endpoint is used to retrieve an integrator details",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "The record has been successfully retrieved."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "id",
                          "example": "xxxxxxxxxxxxxxxxxxxxxxxx"
                        },
                        "organization": {
                          "type": "string",
                          "description": "organization",
                          "example": "A&B Company"
                        },
                        "first_name": {
                          "type": "string",
                          "description": "first_name",
                          "example": "John"
                        },
                        "last_name": {
                          "type": "string",
                          "description": "last_name",
                          "example": "Doe"
                        },
                        "email": {
                          "type": "string",
                          "description": "email",
                          "example": "ab@gmail.com"
                        },
                        "phone": {
                          "type": "string",
                          "description": "phone",
                          "example": "+xxx xxx xxx xxx"
                        }
                      },
                      "required": [
                        "organization",
                        "first_name",
                        "last_name",
                        "email",
                        "phone"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "INTEGRATOR"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/auth/login": {
      "post": {
        "operationId": "AuthController_authLogin",
        "summary": "Authentication Login",
        "description": "Login to your integrator account. This endpoint allows you to login to your account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "login magic link sent to your email"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "AUTHENTICATION"
        ]
      }
    },
    "/api/v3/auth/verify": {
      "get": {
        "operationId": "AuthController_authVerify",
        "summary": "Verify your account",
        "description": "Verify auth magic link and generate JWT access token. This endpoint allows you to verify your magic link and generate JWT access token",
        "parameters": [
          {
            "description": "User login magic link hash",
            "example": "YiLCJtYWMiOiJlZGJjNjRiNjRjMDYyZDg5YzUxOGIwMDJlYjg1ZmYxNzI5OTQyZWM3Yjg0ZjlmYjkzMTlmMThjMGVmM2RmN2ZmIiwidGFnIjoiIn0",
            "name": "hash",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "ok"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "description": "user_id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "session_id": {
                          "type": "string",
                          "description": "session_id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "token_id": {
                          "type": "string",
                          "description": "token_id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "token": {
                          "type": "string",
                          "description": "JWT access token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                        },
                        "refresh_token": {
                          "type": "string",
                          "description": "JWT refresh token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                        }
                      },
                      "required": [
                        "user_id",
                        "session_id",
                        "token_id",
                        "token",
                        "refresh_token"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid hash"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "AUTHENTICATION"
        ]
      }
    },
    "/api/v3/auth/session/{session_id}": {
      "get": {
        "operationId": "AuthController_getAuthSession",
        "summary": "Authorize user details",
        "description": "Provide your session Id to retieve all information about the logged user",
        "parameters": [
          {
            "name": "session_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "session details retrieved"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "description": "user_id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "session_id": {
                          "type": "string",
                          "description": "session_id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "token_id": {
                          "type": "string",
                          "description": "token_id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "created_at": {
                          "type": "string",
                          "description": "session creation date",
                          "example": "2020-10-30T07:00:00.000Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "session last updated date",
                          "example": "2020-10-30T07:00:00.000Z"
                        }
                      },
                      "required": [
                        "user_id",
                        "session_id",
                        "token_id",
                        "created_at",
                        "updated_at"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid session"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "AUTHENTICATION"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/auth/logout/{session_id}": {
      "get": {
        "operationId": "AuthController_deleteAuthSession",
        "summary": "Logout user",
        "description": "Provide your session Id to logout the logged user",
        "parameters": [
          {
            "name": "session_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "session deleted"
                    },
                    "data": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid session Id"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "AUTHENTICATION"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/auth/refresh-token": {
      "get": {
        "operationId": "AuthController_refreshToken",
        "summary": "Get refresh token.",
        "description": "This endpoint is used to get a refresh token of the logged in user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "ok"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "description": "user_id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "session_id": {
                          "type": "string",
                          "description": "session_id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "token": {
                          "type": "string",
                          "description": "JWT access token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                        },
                        "refresh_token": {
                          "type": "string",
                          "description": "JWT refresh token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                        }
                      },
                      "required": [
                        "user_id",
                        "session_id",
                        "token",
                        "refresh_token"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Refresh Token Passed"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "AUTHENTICATION"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/auth/api-key": {
      "get": {
        "operationId": "AuthController_getApiKey",
        "summary": "Get API Key Hash.",
        "description": "This endpoint is used to retrieve the hash of the API KEY of the user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "ok"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "hash": {
                          "type": "string",
                          "description": "hash",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        }
                      },
                      "required": [
                        "hash"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "AUTHENTICATION"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "operationId": "AuthController_generateApiKey",
        "summary": "Generate API Key.",
        "description": "This endpoint is used to generate an the API Key which can be used to authorize transactions and more",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Api-key generated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "key",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        }
                      },
                      "required": [
                        "key"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Api Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "AUTHENTICATION"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/wallet/fiat": {
      "post": {
        "operationId": "FiatWalletController_createFiatWallet",
        "summary": "Create a Fiat Wallet",
        "description": "This endpoint will create a fiat wallet for the integrator.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the wallet",
                    "example": "My Wallet"
                  },
                  "currency": {
                    "type": "string",
                    "description": "The currency of the wallet",
                    "enum": [
                      "KES",
                      "GHS",
                      "NGN",
                      "ZAR",
                      "USD",
                      "XOF",
                      "ZMW",
                      "XAF",
                      "CDF",
                      "TZS",
                      "UGX",
                      "EGP",
                      "MWK",
                      "RWF"
                    ],
                    "example": "eg NGN or GHS or KES"
                  }
                },
                "required": [
                  "name",
                  "currency"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Fiat wallet has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the wallet",
                          "example": "My Wallet"
                        },
                        "type": {
                          "type": "string",
                          "description": "Select wallet type",
                          "enum": [
                            "crypto",
                            "fiat"
                          ],
                          "example": "eg crypto or fiat"
                        },
                        "currency": {
                          "type": "string",
                          "description": "The currency of the wallet",
                          "enum": [
                            "KES",
                            "GHS",
                            "NGN",
                            "ZAR",
                            "USD",
                            "XOF",
                            "ZMW",
                            "XAF",
                            "CDF",
                            "TZS",
                            "UGX",
                            "EGP",
                            "MWK",
                            "RWF"
                          ],
                          "example": "eg NGN or GHS or KES"
                        },
                        "integrator": {
                          "type": "string",
                          "description": "The integrator of the wallet",
                          "example": "4440cb6a-f7c7-11ed-b67e-0242ac120002"
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the wallet",
                          "enum": [
                            "active",
                            "inactive",
                            "suspended",
                            "deleted"
                          ],
                          "example": "eg active or inactive"
                        },
                        "id": {
                          "type": "string",
                          "description": "The id of the wallet",
                          "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
                        },
                        "balance": {
                          "type": "number",
                          "description": "The amount of the wallet",
                          "example": 1000
                        },
                        "deposit_balance": {
                          "type": "number",
                          "description": "Amount of the wallet that has been deposited so far",
                          "example": 1000
                        }
                      },
                      "required": [
                        "name",
                        "type",
                        "currency",
                        "integrator",
                        "id",
                        "balance",
                        "deposit_balance"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "FIAT WALLET"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "operationId": "FiatWalletController_getUsersFiatWallet",
        "summary": "Get Integrator Fiat Wallets",
        "description": "This endpoint will return all the fiat wallets created by the integrator.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Fiat wallet has been successfully retrieved."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the wallet",
                            "example": "My Wallet"
                          },
                          "type": {
                            "type": "string",
                            "description": "Select wallet type",
                            "enum": [
                              "crypto",
                              "fiat"
                            ],
                            "example": "eg crypto or fiat"
                          },
                          "currency": {
                            "type": "string",
                            "description": "The currency of the wallet",
                            "enum": [
                              "KES",
                              "GHS",
                              "NGN",
                              "ZAR",
                              "USD",
                              "XOF",
                              "ZMW",
                              "XAF",
                              "CDF",
                              "TZS",
                              "UGX",
                              "EGP",
                              "MWK",
                              "RWF"
                            ],
                            "example": "eg NGN or GHS or KES"
                          },
                          "integrator": {
                            "type": "string",
                            "description": "The integrator of the wallet",
                            "example": "4440cb6a-f7c7-11ed-b67e-0242ac120002"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the wallet",
                            "enum": [
                              "active",
                              "inactive",
                              "suspended",
                              "deleted"
                            ],
                            "example": "eg active or inactive"
                          },
                          "id": {
                            "type": "string",
                            "description": "The id of the wallet",
                            "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
                          },
                          "balance": {
                            "type": "number",
                            "description": "The amount of the wallet",
                            "example": 1000
                          },
                          "deposit_balance": {
                            "type": "number",
                            "description": "Amount of the wallet that has been deposited so far",
                            "example": 1000
                          }
                        },
                        "required": [
                          "name",
                          "type",
                          "currency",
                          "integrator",
                          "id",
                          "balance",
                          "deposit_balance"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "FIAT WALLET"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/wallet/fiat/{id}": {
      "get": {
        "operationId": "FiatWalletController_getFiatWallet",
        "summary": "Get Integrator Fiat Wallet by Wallet ID",
        "description": "This endpoint will return the fiat wallet created by the integrator.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "The wallet has been successfully retrieved."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the wallet",
                          "example": "My Wallet"
                        },
                        "type": {
                          "type": "string",
                          "description": "Select wallet type",
                          "enum": [
                            "crypto",
                            "fiat"
                          ],
                          "example": "eg crypto or fiat"
                        },
                        "currency": {
                          "type": "string",
                          "description": "The currency of the wallet",
                          "enum": [
                            "KES",
                            "GHS",
                            "NGN",
                            "ZAR",
                            "USD",
                            "XOF",
                            "ZMW",
                            "XAF",
                            "CDF",
                            "TZS",
                            "UGX",
                            "EGP",
                            "MWK",
                            "RWF"
                          ],
                          "example": "eg NGN or GHS or KES"
                        },
                        "integrator": {
                          "type": "string",
                          "description": "The integrator of the wallet",
                          "example": "4440cb6a-f7c7-11ed-b67e-0242ac120002"
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the wallet",
                          "enum": [
                            "active",
                            "inactive",
                            "suspended",
                            "deleted"
                          ],
                          "example": "eg active or inactive"
                        },
                        "id": {
                          "type": "string",
                          "description": "The id of the wallet",
                          "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
                        },
                        "balance": {
                          "type": "number",
                          "description": "The amount of the wallet",
                          "example": 1000
                        },
                        "deposit_balance": {
                          "type": "number",
                          "description": "Amount of the wallet that has been deposited so far",
                          "example": 1000
                        }
                      },
                      "required": [
                        "name",
                        "type",
                        "currency",
                        "integrator",
                        "id",
                        "balance",
                        "deposit_balance"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Wallet Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "FIAT WALLET"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "operationId": "FiatWalletController_updateFiatWallet",
        "summary": "Update Integrator Fiat Wallet by Wallet ID",
        "description": "This endpoint will update the fiat wallet created by the integrator.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the wallet",
                    "example": "My Wallet"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Fiat wallet has been successfully updated."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the wallet",
                          "example": "My Wallet"
                        },
                        "type": {
                          "type": "string",
                          "description": "Select wallet type",
                          "enum": [
                            "crypto",
                            "fiat"
                          ],
                          "example": "eg crypto or fiat"
                        },
                        "currency": {
                          "type": "string",
                          "description": "The currency of the wallet",
                          "enum": [
                            "KES",
                            "GHS",
                            "NGN",
                            "ZAR",
                            "USD",
                            "XOF",
                            "ZMW",
                            "XAF",
                            "CDF",
                            "TZS",
                            "UGX",
                            "EGP",
                            "MWK",
                            "RWF"
                          ],
                          "example": "eg NGN or GHS or KES"
                        },
                        "integrator": {
                          "type": "string",
                          "description": "The integrator of the wallet",
                          "example": "4440cb6a-f7c7-11ed-b67e-0242ac120002"
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the wallet",
                          "enum": [
                            "active",
                            "inactive",
                            "suspended",
                            "deleted"
                          ],
                          "example": "eg active or inactive"
                        },
                        "id": {
                          "type": "string",
                          "description": "The id of the wallet",
                          "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
                        },
                        "balance": {
                          "type": "number",
                          "description": "The amount of the wallet",
                          "example": 1000
                        },
                        "deposit_balance": {
                          "type": "number",
                          "description": "Amount of the wallet that has been deposited so far",
                          "example": 1000
                        }
                      },
                      "required": [
                        "name",
                        "type",
                        "currency",
                        "integrator",
                        "id",
                        "balance",
                        "deposit_balance"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Wallet Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "FIAT WALLET"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/wallet/crypto": {
      "post": {
        "operationId": "CryptoWalletController_createCryptoWallet",
        "summary": "Create a Crypto wallet",
        "description": "The crypto wallet will contain the specified chain and coins an integrator desires to hold and one can create as many wallets as needed.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the wallet",
                    "example": "My Wallet"
                  },
                  "customAddress": {
                    "type": "string",
                    "description": "custom for deposits public address",
                    "example": "0x1234567890"
                  },
                  "coin": {
                    "type": "string",
                    "description": "The currency of the wallet",
                    "enum": [
                      "CUSD",
                      "USDC",
                      "USDT",
                      "SAT",
                      "BTC",
                      "HASH",
                      "FUSE",
                      "HBAR",
                      "USDGLO"
                    ],
                    "example": "eg CUSD or USDC or USDT"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The chain of the wallet.Its required if the wallet is a crypto wallet",
                    "enum": [
                      "ETHEREUM",
                      "CELO",
                      "AVALANCHE",
                      "POLYGON",
                      "ARBITRUM",
                      "OPTIMISM",
                      "STELLAR",
                      "TRON",
                      "FUSE",
                      "LIGHTNING",
                      "SOLANA",
                      "PROVENANCE",
                      "CARDANO",
                      "HEDERA"
                    ],
                    "example": "eg CELO or ETHEREUM or AVALANCHE or POLYGON"
                  }
                },
                "required": [
                  "name",
                  "coin"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Wallet has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the wallet",
                          "example": "My Wallet"
                        },
                        "balance": {
                          "type": "number",
                          "description": "The amount of the wallet",
                          "example": 1000
                        },
                        "address": {
                          "type": "string",
                          "description": "Wallet transaction address",
                          "example": "0x1234567890"
                        },
                        "customAddress": {
                          "type": "string",
                          "description": "custom for deposits public address",
                          "example": "0x1234567890"
                        },
                        "type": {
                          "type": "string",
                          "description": "Select wallet type",
                          "enum": [
                            "crypto",
                            "fiat"
                          ],
                          "example": "eg crypto or fiat"
                        },
                        "coin": {
                          "type": "string",
                          "description": "The currency of the wallet",
                          "enum": [
                            "CUSD",
                            "USDC",
                            "USDT",
                            "SAT",
                            "BTC",
                            "HASH",
                            "FUSE",
                            "HBAR",
                            "USDGLO"
                          ],
                          "example": "eg CUSD or USDC or USDT"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The chain of the wallet.Its required if the wallet is a crypto wallet",
                          "enum": [
                            "ETHEREUM",
                            "CELO",
                            "AVALANCHE",
                            "POLYGON",
                            "ARBITRUM",
                            "OPTIMISM",
                            "STELLAR",
                            "TRON",
                            "FUSE",
                            "LIGHTNING",
                            "SOLANA",
                            "PROVENANCE",
                            "CARDANO",
                            "HEDERA"
                          ],
                          "example": "eg CELO or ETHEREUM or AVALANCHE or POLYGON"
                        },
                        "id": {
                          "type": "string",
                          "description": "The id of the wallet",
                          "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
                        }
                      },
                      "required": [
                        "name",
                        "balance",
                        "type",
                        "coin",
                        "id"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CRYPTO WALLET"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "operationId": "CryptoWalletController_getUsersCryptoWallets",
        "summary": "Get Integrator Crypto Wallets",
        "description": "This endpoint will return all the crypto wallets created by the integrator.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Crypto wallet has been successfully retrieved."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the wallet",
                            "example": "My Wallet"
                          },
                          "balance": {
                            "type": "number",
                            "description": "The amount of the wallet",
                            "example": 1000
                          },
                          "privateAddress": {
                            "type": "string",
                            "description": "Wallet private address",
                            "example": "0x1234567890"
                          },
                          "publicAddress": {
                            "type": "string",
                            "description": "Wallet public address",
                            "example": "0x1234567890"
                          },
                          "address": {
                            "type": "string",
                            "description": "Wallet transaction address",
                            "example": "0x1234567890"
                          },
                          "customAddress": {
                            "type": "string",
                            "description": "custom for deposits public address",
                            "example": "0x1234567890"
                          },
                          "type": {
                            "type": "string",
                            "description": "Select wallet type",
                            "enum": [
                              "crypto",
                              "fiat"
                            ],
                            "example": "eg crypto or fiat"
                          },
                          "coin": {
                            "type": "string",
                            "description": "The currency of the wallet",
                            "enum": [
                              "CUSD",
                              "USDC",
                              "USDT",
                              "SAT",
                              "BTC",
                              "HASH",
                              "FUSE",
                              "HBAR",
                              "USDGLO"
                            ],
                            "example": "eg CUSD or USDC or USDT"
                          },
                          "chain": {
                            "type": "string",
                            "description": "The chain of the wallet.Its required if the wallet is a crypto wallet",
                            "enum": [
                              "ETHEREUM",
                              "CELO",
                              "AVALANCHE",
                              "POLYGON",
                              "ARBITRUM",
                              "OPTIMISM",
                              "STELLAR",
                              "TRON",
                              "FUSE",
                              "LIGHTNING",
                              "SOLANA",
                              "PROVENANCE",
                              "CARDANO",
                              "HEDERA"
                            ],
                            "example": "eg CELO or ETHEREUM or AVALANCHE or POLYGON"
                          },
                          "id": {
                            "type": "string",
                            "description": "The id of the wallet",
                            "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
                          }
                        },
                        "required": [
                          "name",
                          "balance",
                          "type",
                          "coin",
                          "id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CRYPTO WALLET"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/wallet/crypto/{id}": {
      "get": {
        "operationId": "CryptoWalletController_getFiatWallet",
        "summary": "Get Integrator Crypto Wallet by Wallet ID",
        "description": "This endpoint will return the crypto wallet created by the integrator by passing the wallet id.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Crypto Wallet has been successfully retrieved."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the wallet",
                          "example": "My Wallet"
                        },
                        "balance": {
                          "type": "number",
                          "description": "The amount of the wallet",
                          "example": 1000
                        },
                        "privateAddress": {
                          "type": "string",
                          "description": "Wallet private address",
                          "example": "0x1234567890"
                        },
                        "publicAddress": {
                          "type": "string",
                          "description": "Wallet public address",
                          "example": "0x1234567890"
                        },
                        "address": {
                          "type": "string",
                          "description": "Wallet transaction address",
                          "example": "0x1234567890"
                        },
                        "customAddress": {
                          "type": "string",
                          "description": "custom for deposits public address",
                          "example": "0x1234567890"
                        },
                        "type": {
                          "type": "string",
                          "description": "Select wallet type",
                          "enum": [
                            "crypto",
                            "fiat"
                          ],
                          "example": "eg crypto or fiat"
                        },
                        "coin": {
                          "type": "string",
                          "description": "The currency of the wallet",
                          "enum": [
                            "CUSD",
                            "USDC",
                            "USDT",
                            "SAT",
                            "BTC",
                            "HASH",
                            "FUSE",
                            "HBAR",
                            "USDGLO"
                          ],
                          "example": "eg CUSD or USDC or USDT"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The chain of the wallet.Its required if the wallet is a crypto wallet",
                          "enum": [
                            "ETHEREUM",
                            "CELO",
                            "AVALANCHE",
                            "POLYGON",
                            "ARBITRUM",
                            "OPTIMISM",
                            "STELLAR",
                            "TRON",
                            "FUSE",
                            "LIGHTNING",
                            "SOLANA",
                            "PROVENANCE",
                            "CARDANO",
                            "HEDERA"
                          ],
                          "example": "eg CELO or ETHEREUM or AVALANCHE or POLYGON"
                        },
                        "id": {
                          "type": "string",
                          "description": "The id of the wallet",
                          "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
                        }
                      },
                      "required": [
                        "name",
                        "balance",
                        "type",
                        "coin",
                        "id"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CRYPTO WALLET"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "operationId": "CryptoWalletController_updateCryptoWallet",
        "summary": "Update Integrator Crypto Wallet by Wallet ID",
        "description": "This endpoint will update the crypto wallet name created by the integrator by passing the wallet id.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the wallet",
                    "example": "My Wallet"
                  },
                  "publicAddress": {
                    "type": "string",
                    "description": "You can attach a wallet to receive deposits",
                    "example": "0x1234567890"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The chain of the wallet.Its required if the wallet is a crypto wallet",
                    "enum": [
                      "ETHEREUM",
                      "CELO",
                      "AVALANCHE",
                      "POLYGON",
                      "ARBITRUM",
                      "OPTIMISM",
                      "STELLAR",
                      "TRON",
                      "FUSE",
                      "LIGHTNING",
                      "SOLANA",
                      "PROVENANCE",
                      "CARDANO",
                      "HEDERA"
                    ],
                    "example": "eg CELO or ETHEREUM or AVALANCHE or POLYGON"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Wallet has been successfully updated."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the wallet",
                          "example": "My Wallet"
                        },
                        "balance": {
                          "type": "number",
                          "description": "The amount of the wallet",
                          "example": 1000
                        },
                        "privateAddress": {
                          "type": "string",
                          "description": "Wallet private address",
                          "example": "0x1234567890"
                        },
                        "publicAddress": {
                          "type": "string",
                          "description": "Wallet public address",
                          "example": "0x1234567890"
                        },
                        "address": {
                          "type": "string",
                          "description": "Wallet transaction address",
                          "example": "0x1234567890"
                        },
                        "customAddress": {
                          "type": "string",
                          "description": "custom for deposits public address",
                          "example": "0x1234567890"
                        },
                        "type": {
                          "type": "string",
                          "description": "Select wallet type",
                          "enum": [
                            "crypto",
                            "fiat"
                          ],
                          "example": "eg crypto or fiat"
                        },
                        "coin": {
                          "type": "string",
                          "description": "The currency of the wallet",
                          "enum": [
                            "CUSD",
                            "USDC",
                            "USDT",
                            "SAT",
                            "BTC",
                            "HASH",
                            "FUSE",
                            "HBAR",
                            "USDGLO"
                          ],
                          "example": "eg CUSD or USDC or USDT"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The chain of the wallet.Its required if the wallet is a crypto wallet",
                          "enum": [
                            "ETHEREUM",
                            "CELO",
                            "AVALANCHE",
                            "POLYGON",
                            "ARBITRUM",
                            "OPTIMISM",
                            "STELLAR",
                            "TRON",
                            "FUSE",
                            "LIGHTNING",
                            "SOLANA",
                            "PROVENANCE",
                            "CARDANO",
                            "HEDERA"
                          ],
                          "example": "eg CELO or ETHEREUM or AVALANCHE or POLYGON"
                        },
                        "id": {
                          "type": "string",
                          "description": "The id of the wallet",
                          "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
                        }
                      },
                      "required": [
                        "name",
                        "balance",
                        "type",
                        "coin",
                        "id"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Crypto Wallet Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CRYPTO WALLET"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/wallet/crypto/request-details/{id}": {
      "get": {
        "operationId": "CryptoWalletController_requestAddress",
        "summary": "Request Crypto Wallet Address Details by Wallet ID",
        "description": "This endpoint will send wallet address details to the integrators email",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Request has been successfully sent."
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Wallet Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CRYPTO WALLET"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/customer/bank": {
      "post": {
        "operationId": "BankCustomerController_createCustomer",
        "summary": "Create a bank customer",
        "description": "An integrator can use this endpoint to create the customers who will be transacting using the bank (Receiving and sending).",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bio": {
                    "description": "Biographical data",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "first_name": {
                            "type": "string",
                            "example": "John",
                            "description": "First name"
                          },
                          "surname": {
                            "type": "string",
                            "example": "Doe",
                            "description": "Surname"
                          },
                          "gender": {
                            "type": "string",
                            "example": "Male",
                            "description": "Gender"
                          },
                          "date_of_birth": {
                            "type": "string",
                            "example": "1990-01-01",
                            "description": "Date of birth"
                          },
                          "occupation": {
                            "type": "string",
                            "example": "Engineer",
                            "description": "Occupation"
                          },
                          "country_code": {
                            "type": "string",
                            "enum": [
                              "NGA",
                              "ZAF",
                              "GHA",
                              "CIV"
                            ],
                            "example": "NGA",
                            "description": "Country code"
                          }
                        },
                        "required": [
                          "first_name",
                          "surname",
                          "gender",
                          "date_of_birth",
                          "occupation",
                          "country_code"
                        ]
                      }
                    ]
                  },
                  "kyc": {
                    "description": "KYC data",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "BANK_VERIFICATION_NUMBER",
                            "description": "Identification type",
                            "enum": [
                              "BANK_VERIFICATION_NUMBER",
                              "NATIONAL_IDENTIFICATION_NUMBER",
                              "DRIVERS_LICENSE",
                              "TRAVEL_PASSPORT"
                            ]
                          },
                          "number": {
                            "type": "string",
                            "example": "123456789",
                            "description": "Identification number"
                          }
                        },
                        "required": [
                          "type",
                          "number"
                        ]
                      }
                    ]
                  },
                  "contact": {
                    "description": "Contact data",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "phone_number": {
                            "type": "string",
                            "example": "+123456789",
                            "description": "Phone number"
                          },
                          "email_address": {
                            "type": "string",
                            "example": "john@example.com",
                            "description": "Email address"
                          },
                          "address": {
                            "example": {
                              "line": "123 Street",
                              "province": "Province",
                              "municipality": "Municipality",
                              "city": "City"
                            },
                            "description": "Address",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "line": {
                                    "type": "string",
                                    "example": "123 Street",
                                    "description": "Address line"
                                  },
                                  "province": {
                                    "type": "string",
                                    "example": "Province",
                                    "description": "Province"
                                  },
                                  "municipality": {
                                    "type": "string",
                                    "example": "Municipality",
                                    "description": "Municipality"
                                  },
                                  "city": {
                                    "type": "string",
                                    "example": "City",
                                    "description": "City"
                                  }
                                },
                                "required": [
                                  "line",
                                  "province",
                                  "municipality",
                                  "city"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "phone_number",
                          "email_address",
                          "address"
                        ]
                      }
                    ]
                  },
                  "country_code": {
                    "type": "string",
                    "enum": [
                      "GHA",
                      "NG",
                      "KE",
                      "ZA",
                      "CIV",
                      "ZM",
                      "CMR",
                      "COD",
                      "SEN",
                      "TZ",
                      "MWI",
                      "UG",
                      "EG",
                      "RW"
                    ],
                    "example": "GHA or KE"
                  },
                  "reference": {
                    "type": "string",
                    "example": "Ref123",
                    "description": "Reference"
                  }
                },
                "required": [
                  "bio",
                  "kyc",
                  "contact",
                  "country_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "bio": {
                          "description": "Biographical data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "first_name": {
                                  "type": "string",
                                  "example": "John",
                                  "description": "First name"
                                },
                                "surname": {
                                  "type": "string",
                                  "example": "Doe",
                                  "description": "Surname"
                                },
                                "gender": {
                                  "type": "string",
                                  "example": "Male",
                                  "description": "Gender"
                                },
                                "date_of_birth": {
                                  "type": "string",
                                  "example": "1990-01-01",
                                  "description": "Date of birth"
                                },
                                "occupation": {
                                  "type": "string",
                                  "example": "Engineer",
                                  "description": "Occupation"
                                },
                                "country_code": {
                                  "type": "string",
                                  "enum": [
                                    "NGA",
                                    "ZAF",
                                    "GHA",
                                    "CIV"
                                  ],
                                  "example": "NGA",
                                  "description": "Country code"
                                }
                              },
                              "required": [
                                "first_name",
                                "surname",
                                "gender",
                                "date_of_birth",
                                "occupation",
                                "country_code"
                              ]
                            }
                          ]
                        },
                        "contact": {
                          "description": "Contact data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "phone_number": {
                                  "type": "string",
                                  "example": "+123456789",
                                  "description": "Phone number"
                                },
                                "email_address": {
                                  "type": "string",
                                  "example": "john@example.com",
                                  "description": "Email address"
                                },
                                "address": {
                                  "example": {
                                    "line": "123 Street",
                                    "province": "Province",
                                    "municipality": "Municipality",
                                    "city": "City"
                                  },
                                  "description": "Address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line": {
                                          "type": "string",
                                          "example": "123 Street",
                                          "description": "Address line"
                                        },
                                        "province": {
                                          "type": "string",
                                          "example": "Province",
                                          "description": "Province"
                                        },
                                        "municipality": {
                                          "type": "string",
                                          "example": "Municipality",
                                          "description": "Municipality"
                                        },
                                        "city": {
                                          "type": "string",
                                          "example": "City",
                                          "description": "City"
                                        }
                                      },
                                      "required": [
                                        "line",
                                        "province",
                                        "municipality",
                                        "city"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "phone_number",
                                "email_address",
                                "address"
                              ]
                            }
                          ]
                        },
                        "country_code": {
                          "type": "string",
                          "enum": [
                            "GHA",
                            "NG",
                            "KE",
                            "ZA",
                            "CIV",
                            "ZM",
                            "CMR",
                            "COD",
                            "SEN",
                            "TZ",
                            "MWI",
                            "UG",
                            "EG",
                            "RW"
                          ],
                          "example": "GHA or KE"
                        },
                        "reference": {
                          "type": "string",
                          "example": "Ref123",
                          "description": "Reference"
                        },
                        "id": {
                          "type": "string",
                          "example": "123456789",
                          "description": "Customer ID"
                        },
                        "kyc": {
                          "description": "KYC data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "BANK_VERIFICATION_NUMBER",
                                  "description": "Identification type",
                                  "enum": [
                                    "BANK_VERIFICATION_NUMBER",
                                    "NATIONAL_IDENTIFICATION_NUMBER",
                                    "DRIVERS_LICENSE",
                                    "TRAVEL_PASSPORT"
                                  ]
                                },
                                "number": {
                                  "type": "string",
                                  "example": "123456789",
                                  "description": "Identification number"
                                }
                              },
                              "required": [
                                "type",
                                "number"
                              ]
                            }
                          ]
                        },
                        "customer_key": {
                          "type": "string",
                          "example": "002fa511a6941f1242c6c6c0cf6aa189",
                          "description": "Customer key"
                        }
                      },
                      "required": [
                        "bio",
                        "contact",
                        "country_code",
                        "kyc",
                        "customer_key"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMER - BANK"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "operationId": "BankCustomerController_getUsersCustomer",
        "summary": "Get all bank customers",
        "description": "An integrator can use this endpoint to get all the customers who will be either receiving or sending money using bank.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customers fetched successfully."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "bio": {
                            "description": "Biographical data",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "first_name": {
                                    "type": "string",
                                    "example": "John",
                                    "description": "First name"
                                  },
                                  "surname": {
                                    "type": "string",
                                    "example": "Doe",
                                    "description": "Surname"
                                  },
                                  "gender": {
                                    "type": "string",
                                    "example": "Male",
                                    "description": "Gender"
                                  },
                                  "date_of_birth": {
                                    "type": "string",
                                    "example": "1990-01-01",
                                    "description": "Date of birth"
                                  },
                                  "occupation": {
                                    "type": "string",
                                    "example": "Engineer",
                                    "description": "Occupation"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "enum": [
                                      "NGA",
                                      "ZAF",
                                      "GHA",
                                      "CIV"
                                    ],
                                    "example": "NGA",
                                    "description": "Country code"
                                  }
                                },
                                "required": [
                                  "first_name",
                                  "surname",
                                  "gender",
                                  "date_of_birth",
                                  "occupation",
                                  "country_code"
                                ]
                              }
                            ]
                          },
                          "contact": {
                            "description": "Contact data",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "phone_number": {
                                    "type": "string",
                                    "example": "+123456789",
                                    "description": "Phone number"
                                  },
                                  "email_address": {
                                    "type": "string",
                                    "example": "john@example.com",
                                    "description": "Email address"
                                  },
                                  "address": {
                                    "example": {
                                      "line": "123 Street",
                                      "province": "Province",
                                      "municipality": "Municipality",
                                      "city": "City"
                                    },
                                    "description": "Address",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "line": {
                                            "type": "string",
                                            "example": "123 Street",
                                            "description": "Address line"
                                          },
                                          "province": {
                                            "type": "string",
                                            "example": "Province",
                                            "description": "Province"
                                          },
                                          "municipality": {
                                            "type": "string",
                                            "example": "Municipality",
                                            "description": "Municipality"
                                          },
                                          "city": {
                                            "type": "string",
                                            "example": "City",
                                            "description": "City"
                                          }
                                        },
                                        "required": [
                                          "line",
                                          "province",
                                          "municipality",
                                          "city"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "phone_number",
                                  "email_address",
                                  "address"
                                ]
                              }
                            ]
                          },
                          "country_code": {
                            "type": "string",
                            "enum": [
                              "GHA",
                              "NG",
                              "KE",
                              "ZA",
                              "CIV",
                              "ZM",
                              "CMR",
                              "COD",
                              "SEN",
                              "TZ",
                              "MWI",
                              "UG",
                              "EG",
                              "RW"
                            ],
                            "example": "GHA or KE"
                          },
                          "reference": {
                            "type": "string",
                            "example": "Ref123",
                            "description": "Reference"
                          },
                          "id": {
                            "type": "string",
                            "example": "123456789",
                            "description": "Customer ID"
                          },
                          "kyc": {
                            "description": "KYC data",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "BANK_VERIFICATION_NUMBER",
                                    "description": "Identification type",
                                    "enum": [
                                      "BANK_VERIFICATION_NUMBER",
                                      "NATIONAL_IDENTIFICATION_NUMBER",
                                      "DRIVERS_LICENSE",
                                      "TRAVEL_PASSPORT"
                                    ]
                                  },
                                  "number": {
                                    "type": "string",
                                    "example": "123456789",
                                    "description": "Identification number"
                                  }
                                },
                                "required": [
                                  "type",
                                  "number"
                                ]
                              }
                            ]
                          },
                          "customer_key": {
                            "type": "string",
                            "example": "002fa511a6941f1242c6c6c0cf6aa189",
                            "description": "Customer key"
                          }
                        },
                        "required": [
                          "bio",
                          "contact",
                          "country_code",
                          "kyc",
                          "customer_key"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMER - BANK"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/customer/bank/bio/{customer_key}": {
      "patch": {
        "operationId": "BankCustomerController_updateBioData",
        "summary": "Update a bank customer bio data",
        "description": "An integrator can use this endpoint to update the bio data of a customer by passing customer key.",
        "parameters": [
          {
            "name": "customer_key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "JERAHMEEL",
                    "description": "First name"
                  },
                  "middle_name": {
                    "type": "string",
                    "example": "OVIE",
                    "description": "Middle name"
                  },
                  "surname": {
                    "type": "string",
                    "example": "ANIBOR",
                    "description": "Surname"
                  },
                  "gender": {
                    "type": "string",
                    "example": "MALE",
                    "description": "Gender"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "example": "19-10-1992",
                    "description": "Date of birth"
                  },
                  "occupation": {
                    "type": "string",
                    "example": "ENGINEER",
                    "description": "Occupation"
                  },
                  "country_code": {
                    "type": "string",
                    "example": "NGA",
                    "description": "Country code"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Bio Data has been successfully updated."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "bio": {
                          "description": "Biographical data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "first_name": {
                                  "type": "string",
                                  "example": "John",
                                  "description": "First name"
                                },
                                "surname": {
                                  "type": "string",
                                  "example": "Doe",
                                  "description": "Surname"
                                },
                                "gender": {
                                  "type": "string",
                                  "example": "Male",
                                  "description": "Gender"
                                },
                                "date_of_birth": {
                                  "type": "string",
                                  "example": "1990-01-01",
                                  "description": "Date of birth"
                                },
                                "occupation": {
                                  "type": "string",
                                  "example": "Engineer",
                                  "description": "Occupation"
                                },
                                "country_code": {
                                  "type": "string",
                                  "enum": [
                                    "NGA",
                                    "ZAF",
                                    "GHA",
                                    "CIV"
                                  ],
                                  "example": "NGA",
                                  "description": "Country code"
                                }
                              },
                              "required": [
                                "first_name",
                                "surname",
                                "gender",
                                "date_of_birth",
                                "occupation",
                                "country_code"
                              ]
                            }
                          ]
                        },
                        "contact": {
                          "description": "Contact data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "phone_number": {
                                  "type": "string",
                                  "example": "+123456789",
                                  "description": "Phone number"
                                },
                                "email_address": {
                                  "type": "string",
                                  "example": "john@example.com",
                                  "description": "Email address"
                                },
                                "address": {
                                  "example": {
                                    "line": "123 Street",
                                    "province": "Province",
                                    "municipality": "Municipality",
                                    "city": "City"
                                  },
                                  "description": "Address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line": {
                                          "type": "string",
                                          "example": "123 Street",
                                          "description": "Address line"
                                        },
                                        "province": {
                                          "type": "string",
                                          "example": "Province",
                                          "description": "Province"
                                        },
                                        "municipality": {
                                          "type": "string",
                                          "example": "Municipality",
                                          "description": "Municipality"
                                        },
                                        "city": {
                                          "type": "string",
                                          "example": "City",
                                          "description": "City"
                                        }
                                      },
                                      "required": [
                                        "line",
                                        "province",
                                        "municipality",
                                        "city"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "phone_number",
                                "email_address",
                                "address"
                              ]
                            }
                          ]
                        },
                        "country_code": {
                          "type": "string",
                          "enum": [
                            "GHA",
                            "NG",
                            "KE",
                            "ZA",
                            "CIV",
                            "ZM",
                            "CMR",
                            "COD",
                            "SEN",
                            "TZ",
                            "MWI",
                            "UG",
                            "EG",
                            "RW"
                          ],
                          "example": "GHA or KE"
                        },
                        "reference": {
                          "type": "string",
                          "example": "Ref123",
                          "description": "Reference"
                        },
                        "id": {
                          "type": "string",
                          "example": "123456789",
                          "description": "Customer ID"
                        },
                        "kyc": {
                          "description": "KYC data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "BANK_VERIFICATION_NUMBER",
                                  "description": "Identification type",
                                  "enum": [
                                    "BANK_VERIFICATION_NUMBER",
                                    "NATIONAL_IDENTIFICATION_NUMBER",
                                    "DRIVERS_LICENSE",
                                    "TRAVEL_PASSPORT"
                                  ]
                                },
                                "number": {
                                  "type": "string",
                                  "example": "123456789",
                                  "description": "Identification number"
                                }
                              },
                              "required": [
                                "type",
                                "number"
                              ]
                            }
                          ]
                        },
                        "customer_key": {
                          "type": "string",
                          "example": "002fa511a6941f1242c6c6c0cf6aa189",
                          "description": "Customer key"
                        }
                      },
                      "required": [
                        "bio",
                        "contact",
                        "country_code",
                        "kyc",
                        "customer_key"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMER - BANK"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/customer/bank/contact/{customer_key}": {
      "patch": {
        "operationId": "BankCustomerController_updateContactData",
        "summary": "Update a bank customer contact data",
        "description": "An integrator can use this endpoint to update the contact data of a customer by passing customer key.",
        "parameters": [
          {
            "name": "customer_key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_number": {
                    "type": "string",
                    "example": "08131533091",
                    "description": "Phone number"
                  },
                  "email_address": {
                    "type": "string",
                    "example": "ovie@redbiller.email",
                    "description": "Email address"
                  },
                  "address": {
                    "description": "Address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line": {
                            "type": "string",
                            "example": "9, Fedrick Avenue, University View Estate, Olokonla, Ajah",
                            "description": "Address line"
                          },
                          "province": {
                            "type": "string",
                            "example": "Lagos",
                            "description": "Province"
                          },
                          "municipality": {
                            "type": "string",
                            "example": "Alimisho",
                            "description": "Municipality"
                          },
                          "city": {
                            "type": "string",
                            "example": "Ajah",
                            "description": "City"
                          },
                          "customer_key": {
                            "type": "string",
                            "example": "002fa511a6941f1242c6c6c0cf6aa189",
                            "description": "Customer key"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact has been successfully updated."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "bio": {
                          "description": "Biographical data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "first_name": {
                                  "type": "string",
                                  "example": "John",
                                  "description": "First name"
                                },
                                "surname": {
                                  "type": "string",
                                  "example": "Doe",
                                  "description": "Surname"
                                },
                                "gender": {
                                  "type": "string",
                                  "example": "Male",
                                  "description": "Gender"
                                },
                                "date_of_birth": {
                                  "type": "string",
                                  "example": "1990-01-01",
                                  "description": "Date of birth"
                                },
                                "occupation": {
                                  "type": "string",
                                  "example": "Engineer",
                                  "description": "Occupation"
                                },
                                "country_code": {
                                  "type": "string",
                                  "enum": [
                                    "NGA",
                                    "ZAF",
                                    "GHA",
                                    "CIV"
                                  ],
                                  "example": "NGA",
                                  "description": "Country code"
                                }
                              },
                              "required": [
                                "first_name",
                                "surname",
                                "gender",
                                "date_of_birth",
                                "occupation",
                                "country_code"
                              ]
                            }
                          ]
                        },
                        "contact": {
                          "description": "Contact data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "phone_number": {
                                  "type": "string",
                                  "example": "+123456789",
                                  "description": "Phone number"
                                },
                                "email_address": {
                                  "type": "string",
                                  "example": "john@example.com",
                                  "description": "Email address"
                                },
                                "address": {
                                  "example": {
                                    "line": "123 Street",
                                    "province": "Province",
                                    "municipality": "Municipality",
                                    "city": "City"
                                  },
                                  "description": "Address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line": {
                                          "type": "string",
                                          "example": "123 Street",
                                          "description": "Address line"
                                        },
                                        "province": {
                                          "type": "string",
                                          "example": "Province",
                                          "description": "Province"
                                        },
                                        "municipality": {
                                          "type": "string",
                                          "example": "Municipality",
                                          "description": "Municipality"
                                        },
                                        "city": {
                                          "type": "string",
                                          "example": "City",
                                          "description": "City"
                                        }
                                      },
                                      "required": [
                                        "line",
                                        "province",
                                        "municipality",
                                        "city"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "phone_number",
                                "email_address",
                                "address"
                              ]
                            }
                          ]
                        },
                        "country_code": {
                          "type": "string",
                          "enum": [
                            "GHA",
                            "NG",
                            "KE",
                            "ZA",
                            "CIV",
                            "ZM",
                            "CMR",
                            "COD",
                            "SEN",
                            "TZ",
                            "MWI",
                            "UG",
                            "EG",
                            "RW"
                          ],
                          "example": "GHA or KE"
                        },
                        "reference": {
                          "type": "string",
                          "example": "Ref123",
                          "description": "Reference"
                        },
                        "id": {
                          "type": "string",
                          "example": "123456789",
                          "description": "Customer ID"
                        },
                        "kyc": {
                          "description": "KYC data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "BANK_VERIFICATION_NUMBER",
                                  "description": "Identification type",
                                  "enum": [
                                    "BANK_VERIFICATION_NUMBER",
                                    "NATIONAL_IDENTIFICATION_NUMBER",
                                    "DRIVERS_LICENSE",
                                    "TRAVEL_PASSPORT"
                                  ]
                                },
                                "number": {
                                  "type": "string",
                                  "example": "123456789",
                                  "description": "Identification number"
                                }
                              },
                              "required": [
                                "type",
                                "number"
                              ]
                            }
                          ]
                        },
                        "customer_key": {
                          "type": "string",
                          "example": "002fa511a6941f1242c6c6c0cf6aa189",
                          "description": "Customer key"
                        }
                      },
                      "required": [
                        "bio",
                        "contact",
                        "country_code",
                        "kyc",
                        "customer_key"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMER - BANK"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/customer/bank/kyc/{customer_key}": {
      "patch": {
        "operationId": "BankCustomerController_updateKycData",
        "summary": "Update a bank customer kyc data",
        "description": "An integrator can use this endpoint to update the kyc data of a customer by passing customer key.",
        "parameters": [
          {
            "name": "customer_key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "BVN_VERIFICATION",
                    "description": "KYC type"
                  },
                  "number": {
                    "type": "string",
                    "example": "22342367371",
                    "description": "KYC number"
                  },
                  "url": {
                    "type": "string",
                    "description": "this could be ID photo url or BVN verification image url"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "KYC has been successfully updated."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "bio": {
                          "description": "Biographical data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "first_name": {
                                  "type": "string",
                                  "example": "John",
                                  "description": "First name"
                                },
                                "surname": {
                                  "type": "string",
                                  "example": "Doe",
                                  "description": "Surname"
                                },
                                "gender": {
                                  "type": "string",
                                  "example": "Male",
                                  "description": "Gender"
                                },
                                "date_of_birth": {
                                  "type": "string",
                                  "example": "1990-01-01",
                                  "description": "Date of birth"
                                },
                                "occupation": {
                                  "type": "string",
                                  "example": "Engineer",
                                  "description": "Occupation"
                                },
                                "country_code": {
                                  "type": "string",
                                  "enum": [
                                    "NGA",
                                    "ZAF",
                                    "GHA",
                                    "CIV"
                                  ],
                                  "example": "NGA",
                                  "description": "Country code"
                                }
                              },
                              "required": [
                                "first_name",
                                "surname",
                                "gender",
                                "date_of_birth",
                                "occupation",
                                "country_code"
                              ]
                            }
                          ]
                        },
                        "contact": {
                          "description": "Contact data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "phone_number": {
                                  "type": "string",
                                  "example": "+123456789",
                                  "description": "Phone number"
                                },
                                "email_address": {
                                  "type": "string",
                                  "example": "john@example.com",
                                  "description": "Email address"
                                },
                                "address": {
                                  "example": {
                                    "line": "123 Street",
                                    "province": "Province",
                                    "municipality": "Municipality",
                                    "city": "City"
                                  },
                                  "description": "Address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line": {
                                          "type": "string",
                                          "example": "123 Street",
                                          "description": "Address line"
                                        },
                                        "province": {
                                          "type": "string",
                                          "example": "Province",
                                          "description": "Province"
                                        },
                                        "municipality": {
                                          "type": "string",
                                          "example": "Municipality",
                                          "description": "Municipality"
                                        },
                                        "city": {
                                          "type": "string",
                                          "example": "City",
                                          "description": "City"
                                        }
                                      },
                                      "required": [
                                        "line",
                                        "province",
                                        "municipality",
                                        "city"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "phone_number",
                                "email_address",
                                "address"
                              ]
                            }
                          ]
                        },
                        "country_code": {
                          "type": "string",
                          "enum": [
                            "GHA",
                            "NG",
                            "KE",
                            "ZA",
                            "CIV",
                            "ZM",
                            "CMR",
                            "COD",
                            "SEN",
                            "TZ",
                            "MWI",
                            "UG",
                            "EG",
                            "RW"
                          ],
                          "example": "GHA or KE"
                        },
                        "reference": {
                          "type": "string",
                          "example": "Ref123",
                          "description": "Reference"
                        },
                        "id": {
                          "type": "string",
                          "example": "123456789",
                          "description": "Customer ID"
                        },
                        "kyc": {
                          "description": "KYC data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "BANK_VERIFICATION_NUMBER",
                                  "description": "Identification type",
                                  "enum": [
                                    "BANK_VERIFICATION_NUMBER",
                                    "NATIONAL_IDENTIFICATION_NUMBER",
                                    "DRIVERS_LICENSE",
                                    "TRAVEL_PASSPORT"
                                  ]
                                },
                                "number": {
                                  "type": "string",
                                  "example": "123456789",
                                  "description": "Identification number"
                                }
                              },
                              "required": [
                                "type",
                                "number"
                              ]
                            }
                          ]
                        },
                        "customer_key": {
                          "type": "string",
                          "example": "002fa511a6941f1242c6c6c0cf6aa189",
                          "description": "Customer key"
                        }
                      },
                      "required": [
                        "bio",
                        "contact",
                        "country_code",
                        "kyc",
                        "customer_key"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMER - BANK"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/customer/bank/{customer_key}": {
      "get": {
        "operationId": "BankCustomerController_getCustomerDetails",
        "summary": "Get a bank customer",
        "description": "An integrator can use this endpoint to get the customer who will be either receiving or sending money using bank by passing customer key.",
        "parameters": [
          {
            "name": "customer_key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer fetched successfully."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "bio": {
                          "description": "Biographical data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "first_name": {
                                  "type": "string",
                                  "example": "John",
                                  "description": "First name"
                                },
                                "surname": {
                                  "type": "string",
                                  "example": "Doe",
                                  "description": "Surname"
                                },
                                "gender": {
                                  "type": "string",
                                  "example": "Male",
                                  "description": "Gender"
                                },
                                "date_of_birth": {
                                  "type": "string",
                                  "example": "1990-01-01",
                                  "description": "Date of birth"
                                },
                                "occupation": {
                                  "type": "string",
                                  "example": "Engineer",
                                  "description": "Occupation"
                                },
                                "country_code": {
                                  "type": "string",
                                  "enum": [
                                    "NGA",
                                    "ZAF",
                                    "GHA",
                                    "CIV"
                                  ],
                                  "example": "NGA",
                                  "description": "Country code"
                                }
                              },
                              "required": [
                                "first_name",
                                "surname",
                                "gender",
                                "date_of_birth",
                                "occupation",
                                "country_code"
                              ]
                            }
                          ]
                        },
                        "contact": {
                          "description": "Contact data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "phone_number": {
                                  "type": "string",
                                  "example": "+123456789",
                                  "description": "Phone number"
                                },
                                "email_address": {
                                  "type": "string",
                                  "example": "john@example.com",
                                  "description": "Email address"
                                },
                                "address": {
                                  "example": {
                                    "line": "123 Street",
                                    "province": "Province",
                                    "municipality": "Municipality",
                                    "city": "City"
                                  },
                                  "description": "Address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line": {
                                          "type": "string",
                                          "example": "123 Street",
                                          "description": "Address line"
                                        },
                                        "province": {
                                          "type": "string",
                                          "example": "Province",
                                          "description": "Province"
                                        },
                                        "municipality": {
                                          "type": "string",
                                          "example": "Municipality",
                                          "description": "Municipality"
                                        },
                                        "city": {
                                          "type": "string",
                                          "example": "City",
                                          "description": "City"
                                        }
                                      },
                                      "required": [
                                        "line",
                                        "province",
                                        "municipality",
                                        "city"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "phone_number",
                                "email_address",
                                "address"
                              ]
                            }
                          ]
                        },
                        "country_code": {
                          "type": "string",
                          "enum": [
                            "GHA",
                            "NG",
                            "KE",
                            "ZA",
                            "CIV",
                            "ZM",
                            "CMR",
                            "COD",
                            "SEN",
                            "TZ",
                            "MWI",
                            "UG",
                            "EG",
                            "RW"
                          ],
                          "example": "GHA or KE"
                        },
                        "reference": {
                          "type": "string",
                          "example": "Ref123",
                          "description": "Reference"
                        },
                        "id": {
                          "type": "string",
                          "example": "123456789",
                          "description": "Customer ID"
                        },
                        "kyc": {
                          "description": "KYC data",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "BANK_VERIFICATION_NUMBER",
                                  "description": "Identification type",
                                  "enum": [
                                    "BANK_VERIFICATION_NUMBER",
                                    "NATIONAL_IDENTIFICATION_NUMBER",
                                    "DRIVERS_LICENSE",
                                    "TRAVEL_PASSPORT"
                                  ]
                                },
                                "number": {
                                  "type": "string",
                                  "example": "123456789",
                                  "description": "Identification number"
                                }
                              },
                              "required": [
                                "type",
                                "number"
                              ]
                            }
                          ]
                        },
                        "customer_key": {
                          "type": "string",
                          "example": "002fa511a6941f1242c6c6c0cf6aa189",
                          "description": "Customer key"
                        }
                      },
                      "required": [
                        "bio",
                        "contact",
                        "country_code",
                        "kyc",
                        "customer_key"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer not found."
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMER - BANK"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/customer/mobile-money": {
      "post": {
        "operationId": "MobileMoneyCustomerController_createCustomer",
        "summary": "Create a mobile money customer",
        "description": "An integrator can use this endpoint to create the customers who will be either receiving or sending money using mobile money.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_number": {
                    "type": "string"
                  },
                  "country_code": {
                    "type": "string",
                    "enum": [
                      "GHA",
                      "NG",
                      "KE",
                      "ZA",
                      "CIV",
                      "ZM",
                      "CMR",
                      "COD",
                      "SEN",
                      "TZ",
                      "MWI",
                      "UG",
                      "EG",
                      "RW"
                    ],
                    "example": "GHA or KE"
                  },
                  "network": {
                    "type": "string",
                    "enum": [
                      "MTN",
                      "AIRTEL",
                      "VODAFONE",
                      "TIGO",
                      "ORANGE",
                      "NOT_SUPPORTED",
                      "ZAMTEL",
                      "MEPESA"
                    ],
                    "description": "only required for GH transactions",
                    "example": "MTN or VODAFONE or AIRTEL"
                  },
                  "account_name": {
                    "type": "string"
                  }
                },
                "required": [
                  "phone_number",
                  "country_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "country_code": {
                          "type": "string",
                          "enum": [
                            "GHA",
                            "NG",
                            "KE",
                            "ZA",
                            "CIV",
                            "ZM",
                            "CMR",
                            "COD",
                            "SEN",
                            "TZ",
                            "MWI",
                            "UG",
                            "EG",
                            "RW"
                          ],
                          "example": "GHA or KE"
                        },
                        "network": {
                          "type": "string",
                          "enum": [
                            "MTN",
                            "AIRTEL",
                            "VODAFONE",
                            "TIGO",
                            "ORANGE",
                            "NOT_SUPPORTED",
                            "ZAMTEL",
                            "MEPESA"
                          ],
                          "description": "only required for GH transactions",
                          "example": "MTN or VODAFONE or AIRTEL"
                        },
                        "customer_key": {
                          "type": "string"
                        },
                        "account_name": {
                          "type": "string"
                        },
                        "integrator": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "phone_number",
                        "country_code"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMER - MOBILE MONEY"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "operationId": "MobileMoneyCustomerController_getUserCustomers",
        "summary": "Get all mobile money customers",
        "description": "An integrator can use this endpoint to get all the customers who will be either receiving or sending money using mobile money.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customers successfully retrieved."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "phone_number": {
                            "type": "string"
                          },
                          "country_code": {
                            "type": "string",
                            "enum": [
                              "GHA",
                              "NG",
                              "KE",
                              "ZA",
                              "CIV",
                              "ZM",
                              "CMR",
                              "COD",
                              "SEN",
                              "TZ",
                              "MWI",
                              "UG",
                              "EG",
                              "RW"
                            ],
                            "example": "GHA or KE"
                          },
                          "network": {
                            "type": "string",
                            "enum": [
                              "MTN",
                              "AIRTEL",
                              "VODAFONE",
                              "TIGO",
                              "ORANGE",
                              "NOT_SUPPORTED",
                              "ZAMTEL",
                              "MEPESA"
                            ],
                            "description": "only required for GH transactions",
                            "example": "MTN or VODAFONE or AIRTEL"
                          },
                          "customer_key": {
                            "type": "string"
                          },
                          "account_name": {
                            "type": "string"
                          },
                          "integrator": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "phone_number",
                          "country_code"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMER - MOBILE MONEY"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/customer/mobile-money/{customer_key}": {
      "patch": {
        "operationId": "MobileMoneyCustomerController_updateCustomer",
        "summary": "Update a mobile money customer",
        "description": "An integrator can use this endpoint to update the customers who will be either receiving or sending money using mobile money.",
        "parameters": [
          {
            "name": "customer_key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "network": {
                    "type": "string",
                    "enum": [
                      "MTN",
                      "AIRTEL",
                      "VODAFONE",
                      "TIGO",
                      "ORANGE",
                      "NOT_SUPPORTED",
                      "ZAMTEL",
                      "MEPESA"
                    ],
                    "description": "only required for GH transactions",
                    "example": "MTN or VODAFONE or AIRTEL"
                  },
                  "account_name": {
                    "type": "string"
                  },
                  "country_code": {
                    "type": "string",
                    "enum": [
                      "GHA",
                      "NG",
                      "KE",
                      "ZA",
                      "CIV",
                      "ZM",
                      "CMR",
                      "COD",
                      "SEN",
                      "TZ",
                      "MWI",
                      "UG",
                      "EG",
                      "RW"
                    ],
                    "example": "GHA or KE"
                  },
                  "first_name": {
                    "type": "string",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "example": "1990-01-01"
                  },
                  "id_number": {
                    "type": "string",
                    "example": "123456789"
                  },
                  "image": {
                    "type": "string"
                  },
                  "id_type": {
                    "type": "string",
                    "enum": [
                      "NATIONAL_ID",
                      "ECOWAS_ID"
                    ],
                    "example": "ECOWAS_ID or NATIONAL_ID"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Bio Data has been successfully updated."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "country_code": {
                          "type": "string",
                          "enum": [
                            "GHA",
                            "NG",
                            "KE",
                            "ZA",
                            "CIV",
                            "ZM",
                            "CMR",
                            "COD",
                            "SEN",
                            "TZ",
                            "MWI",
                            "UG",
                            "EG",
                            "RW"
                          ],
                          "example": "GHA or KE"
                        },
                        "network": {
                          "type": "string",
                          "enum": [
                            "MTN",
                            "AIRTEL",
                            "VODAFONE",
                            "TIGO",
                            "ORANGE",
                            "NOT_SUPPORTED",
                            "ZAMTEL",
                            "MEPESA"
                          ],
                          "description": "only required for GH transactions",
                          "example": "MTN or VODAFONE or AIRTEL"
                        },
                        "customer_key": {
                          "type": "string"
                        },
                        "account_name": {
                          "type": "string"
                        },
                        "integrator": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "phone_number",
                        "country_code"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Api Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMER - MOBILE MONEY"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "operationId": "MobileMoneyCustomerController_getCustomerDetails",
        "summary": "Get a mobile money customer by customer key",
        "description": "An integrator can use this endpoint to get the customer who will be either receiving or sending money using mobile money by passing customer key.",
        "parameters": [
          {
            "name": "customer_key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer fetched successfully."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "country_code": {
                          "type": "string",
                          "enum": [
                            "GHA",
                            "NG",
                            "KE",
                            "ZA",
                            "CIV",
                            "ZM",
                            "CMR",
                            "COD",
                            "SEN",
                            "TZ",
                            "MWI",
                            "UG",
                            "EG",
                            "RW"
                          ],
                          "example": "GHA or KE"
                        },
                        "network": {
                          "type": "string",
                          "enum": [
                            "MTN",
                            "AIRTEL",
                            "VODAFONE",
                            "TIGO",
                            "ORANGE",
                            "NOT_SUPPORTED",
                            "ZAMTEL",
                            "MEPESA"
                          ],
                          "description": "only required for GH transactions",
                          "example": "MTN or VODAFONE or AIRTEL"
                        },
                        "customer_key": {
                          "type": "string"
                        },
                        "account_name": {
                          "type": "string"
                        },
                        "integrator": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "phone_number",
                        "country_code"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "tags": [
          "CUSTOMER - MOBILE MONEY"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/customer/mobile-money/phone/{phone_number}": {
      "get": {
        "operationId": "MobileMoneyCustomerController_getCustomerDetailsByPhone",
        "summary": "Get a mobile money customer by Phone",
        "description": "An integrator can use this endpoint to get the customer who will be either receiving or sending money using mobile money by passing phone number.",
        "parameters": [
          {
            "name": "phone_number",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer fetched successfully."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "country_code": {
                          "type": "string",
                          "enum": [
                            "GHA",
                            "NG",
                            "KE",
                            "ZA",
                            "CIV",
                            "ZM",
                            "CMR",
                            "COD",
                            "SEN",
                            "TZ",
                            "MWI",
                            "UG",
                            "EG",
                            "RW"
                          ],
                          "example": "GHA or KE"
                        },
                        "network": {
                          "type": "string",
                          "enum": [
                            "MTN",
                            "AIRTEL",
                            "VODAFONE",
                            "TIGO",
                            "ORANGE",
                            "NOT_SUPPORTED",
                            "ZAMTEL",
                            "MEPESA"
                          ],
                          "description": "only required for GH transactions",
                          "example": "MTN or VODAFONE or AIRTEL"
                        },
                        "customer_key": {
                          "type": "string"
                        },
                        "account_name": {
                          "type": "string"
                        },
                        "integrator": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "phone_number",
                        "country_code"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer not found."
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMER - MOBILE MONEY"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/withdraw/mobile-money": {
      "post": {
        "operationId": "WithdrawController_mobileMoney",
        "summary": "Withdraw Fiat to Mobile Money",
        "description": "This api will withdraw fiat from the integrator’s fiat wallet to the customer’s mobile money wallet.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_key": {
                    "type": "string",
                    "example": "customer-key-123",
                    "description": "Customer key"
                  },
                  "amount": {
                    "type": "number",
                    "description": "amount to withdraw",
                    "example": 10
                  },
                  "walletId": {
                    "type": "string",
                    "description": "wallet id",
                    "example": "5f9b2c7b9c9d6b0017b4e6b1"
                  },
                  "callbackUrl": {
                    "type": "string",
                    "description": "callback url",
                    "example": "https://example.com"
                  },
                  "referenceId": {
                    "type": "string",
                    "description": "reference id",
                    "example": "5f9b2c7b9c9d6b0017b4e6b1"
                  }
                },
                "required": [
                  "customer_key",
                  "amount",
                  "walletId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Withdrawal has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "referenceId": {
                          "type": "string"
                        },
                        "referenceNumber": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "message",
                        "referenceId",
                        "referenceNumber"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "WITHDRAW"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/withdraw/bank": {
      "post": {
        "operationId": "WithdrawController_bank",
        "summary": "Withdraw Fiat to Mobile Money",
        "description": "This api will withdraw fiat from the integrator’s fiat wallet to the customer’s bank account.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_key": {
                    "type": "string",
                    "example": "customer-key-123",
                    "description": "Customer key"
                  },
                  "amount": {
                    "type": "number",
                    "description": "amount to withdraw",
                    "example": 10
                  },
                  "walletId": {
                    "type": "string",
                    "description": "wallet id",
                    "example": "5f9b2c7b9c9d6b0017b4e6b1"
                  },
                  "callbackUrl": {
                    "type": "string",
                    "description": "callback url",
                    "example": "https://example.com"
                  },
                  "referenceId": {
                    "type": "string",
                    "description": "reference id",
                    "example": "5f9b2c7b9c9d6b0017b4e6b1"
                  }
                },
                "required": [
                  "customer_key",
                  "amount",
                  "walletId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Withdrawal has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "referenceId": {
                          "type": "string"
                        },
                        "referenceNumber": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "message",
                        "referenceId",
                        "referenceNumber"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "WITHDRAW"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/withdraw/status/{reference_id}": {
      "get": {
        "operationId": "WithdrawController_getWithdrawalStatus",
        "summary": "Get Withdrawal Status",
        "description": "This endpoint will return the status of the withdrawal request.",
        "parameters": [
          {
            "name": "reference_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Withdrawal status retrieved"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "withdrawal id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "amount": {
                          "type": "number",
                          "description": "amount to withdraw",
                          "example": 10
                        },
                        "walletId": {
                          "type": "string",
                          "description": "wallet id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "callbackUrl": {
                          "type": "string",
                          "description": "callback url",
                          "example": "https://example.com"
                        },
                        "referenceId": {
                          "type": "string",
                          "description": "reference id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "SUCCESSFUL",
                            "FAILED",
                            "CANCELLED",
                            "REVERSED",
                            "IN_PROGRESS",
                            "INITIATED",
                            "ERROR_OCCURRED"
                          ]
                        },
                        "referenceNumber": {
                          "type": "number"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "transactionCost": {
                          "type": "number"
                        },
                        "transactionAmount": {
                          "type": "number"
                        },
                        "customerKey": {
                          "type": "string"
                        },
                        "integratorFeeAmount": {
                          "type": "number"
                        },
                        "integratorFee": {
                          "type": "number"
                        },
                        "integratorCommissionType": {
                          "type": "string",
                          "enum": [
                            "PERCENTAGE",
                            "FLAT",
                            "NONE"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "amount",
                        "walletId",
                        "status",
                        "referenceNumber",
                        "created_at",
                        "transactionCost",
                        "transactionAmount",
                        "customerKey",
                        "integratorFeeAmount",
                        "integratorFee",
                        "integratorCommissionType"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Reference Id not found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "WITHDRAW"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/deposit/mobile-money": {
      "post": {
        "operationId": "DepositMobileMoneyController_mobileMoney",
        "summary": "Deposit via mobile money",
        "description": "An integrator’s customers can initiate a deposit from their respective mobile money wallets.     An STK push will be sent to the customer and the respective amount will be deducted from their mobile money wallets and deposited into the integrator’s fiat wallet",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_key": {
                    "type": "string",
                    "example": "customer-key-123",
                    "description": "Customer key"
                  },
                  "amount": {
                    "type": "number",
                    "description": "amount to deposit",
                    "example": 10
                  },
                  "wallet_id": {
                    "type": "string",
                    "description": "deposit id",
                    "example": "5f9b2c7b9c9d6b0017b4e6b1"
                  },
                  "callback_url": {
                    "type": "string",
                    "description": "callback url",
                    "example": "https://example.com"
                  },
                  "reference_id": {
                    "type": "string",
                    "description": "reference id",
                    "example": "5f9b2c7b9c9d6b0017b4e6b1"
                  }
                },
                "required": [
                  "customer_key",
                  "amount",
                  "wallet_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Deposit has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "reference_id": {
                          "type": "string"
                        },
                        "reference_number": {
                          "type": "number"
                        },
                        "redirect_url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "message",
                        "reference_id",
                        "reference_number"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "DEPOSIT"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/deposit/mobile-money/status/{reference_id}": {
      "get": {
        "operationId": "DepositMobileMoneyController_getWithdrawalStatus",
        "summary": "Get Deposit on Mobile Money status",
        "description": "An integrator can use this endpoint to check the status of a deposit",
        "parameters": [
          {
            "name": "reference_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Deposit status retrieved."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "deposit id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "amount": {
                          "type": "number",
                          "description": "amount to deposit",
                          "example": 10
                        },
                        "wallet_id": {
                          "type": "string",
                          "description": "deposit id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "callback_url": {
                          "type": "string",
                          "description": "callback url",
                          "example": "https://example.com"
                        },
                        "reference_id": {
                          "type": "string",
                          "description": "reference id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "SUCCESSFUL",
                            "FAILED",
                            "CANCELLED",
                            "REVERSED",
                            "IN_PROGRESS",
                            "DUPLICATE",
                            "ERROR_OCCURRED"
                          ]
                        },
                        "reference_number": {
                          "type": "number"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "transaction_cost": {
                          "type": "number"
                        },
                        "transaction_amount": {
                          "type": "number"
                        },
                        "customer_key": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "amount",
                        "wallet_id",
                        "status",
                        "reference_number",
                        "created_at",
                        "transaction_cost",
                        "transaction_amount",
                        "customer_key"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "DEPOSIT"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/rate/{from}/{to}": {
      "get": {
        "operationId": "RateController_getRates",
        "summary": "Get exchange rate",
        "description": "An integrator can use this endpoint to get the exchange rate between two currencies",
        "parameters": [
          {
            "name": "from",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Available exchange rate."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string",
                          "description": "From currency",
                          "example": "USD"
                        },
                        "to": {
                          "type": "string",
                          "description": "To currency",
                          "example": "EUR"
                        },
                        "value": {
                          "type": "string",
                          "description": "Rate value",
                          "example": "0.85"
                        }
                      },
                      "required": [
                        "from",
                        "to",
                        "value"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "RATES"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/rate/onramp": {
      "post": {
        "operationId": "RateController_getOnrampRates",
        "summary": "Get Onramp Exchange rate",
        "description": "An integrator can use this endpoint to get the exchange rate between two currencies",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "object",
                    "description": "From currency",
                    "example": "KES"
                  },
                  "to": {
                    "type": "object",
                    "description": "To currency",
                    "example": "USDT"
                  },
                  "fiatAmount": {
                    "type": "number",
                    "description": "Rate value",
                    "example": "0.85"
                  }
                },
                "required": [
                  "from",
                  "to",
                  "fiatAmount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Available exchange rate."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string",
                          "description": "From currency",
                          "example": "USD"
                        },
                        "to": {
                          "type": "string",
                          "description": "To currency",
                          "example": "EUR"
                        },
                        "value": {
                          "type": "string",
                          "description": "Rate value",
                          "example": "0.85"
                        }
                      },
                      "required": [
                        "from",
                        "to",
                        "value"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "RATES"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/rate/offramp": {
      "post": {
        "operationId": "RateController_getOffRampRates",
        "summary": "Get Offramp Exchange rate",
        "description": "An integrator can use this endpoint to get the exchange rate between two currencies",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "object",
                    "description": "From currency",
                    "example": "USDC"
                  },
                  "to": {
                    "type": "object",
                    "description": "To currency",
                    "example": "EUR"
                  },
                  "cryptoAmount": {
                    "type": "number",
                    "description": "Rate value",
                    "example": "0.85"
                  }
                },
                "required": [
                  "from",
                  "to",
                  "cryptoAmount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Available exchange rate."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string",
                          "description": "From currency",
                          "example": "USD"
                        },
                        "to": {
                          "type": "string",
                          "description": "To currency",
                          "example": "EUR"
                        },
                        "value": {
                          "type": "string",
                          "description": "Rate value",
                          "example": "0.85"
                        }
                      },
                      "required": [
                        "from",
                        "to",
                        "value"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "RATES"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/rate": {
      "get": {
        "operationId": "RateController_rates",
        "summary": "Get all exchange rates",
        "description": "An integrator can use this endpoint to get all the exchange rates available",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Available exchange rate."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "string",
                            "description": "From currency",
                            "example": "USD"
                          },
                          "to": {
                            "type": "string",
                            "description": "To currency",
                            "example": "EUR"
                          },
                          "value": {
                            "type": "string",
                            "description": "Rate value",
                            "example": "0.85"
                          }
                        },
                        "required": [
                          "from",
                          "to",
                          "value"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "RATES"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/kyc": {
      "post": {
        "operationId": "KycController_createKyc",
        "summary": "Create Kyc Basic Details",
        "description": "This api will create a new kyc basic details",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userEmail": {
                    "type": "string"
                  },
                  "customerKey": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "dob": {
                    "type": "string",
                    "description": "should be of this format YYYY-MM-DD"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "M",
                      "F"
                    ]
                  },
                  "country": {
                    "type": "string",
                    "description": "example GH,KE,NG"
                  },
                  "phone": {
                    "type": "string"
                  }
                },
                "required": [
                  "userEmail",
                  "customerKey",
                  "firstName",
                  "lastName",
                  "dob",
                  "gender",
                  "country",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Kyc Basic Details created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string"
                        },
                        "kycId": {
                          "type": "string"
                        },
                        "kycStatus": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "status"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "KYC"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/kyc/address": {
      "post": {
        "operationId": "KycController_createAddress",
        "summary": "Create Kyc Address",
        "description": "This api will create a new kyc address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "kycId": {
                    "type": "string"
                  },
                  "street": {
                    "type": "string"
                  },
                  "town": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "description": "example GH,KE,NG"
                  }
                },
                "required": [
                  "kycId",
                  "street",
                  "town",
                  "country"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Kyc Address created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string"
                        },
                        "kycId": {
                          "type": "string"
                        },
                        "kycStatus": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "status"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "KYC"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/kyc/document": {
      "post": {
        "operationId": "KycController_createDocument",
        "summary": "Create Kyc Document",
        "description": "This api will create a new kyc document",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "kycId": {
                    "type": "string"
                  },
                  "nationality": {
                    "type": "string",
                    "description": "example Ghanian, Nigerian"
                  },
                  "documentNo": {
                    "type": "string"
                  },
                  "documentExpirationDate": {
                    "type": "string",
                    "description": "should be of this format YYYY-MM-DD"
                  },
                  "country": {
                    "type": "string",
                    "description": "example Ghana, Nigeria, Kenya"
                  },
                  "documentName": {
                    "type": "string",
                    "description": "example PASSPORT, GOVERNMENT ID, VOTERS ID"
                  }
                },
                "required": [
                  "kycId",
                  "nationality",
                  "documentNo",
                  "documentExpirationDate",
                  "country",
                  "documentName"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Kyc Document created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string"
                        },
                        "kycId": {
                          "type": "string"
                        },
                        "kycStatus": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "status"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "KYC"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/kyc/status/{kycId}": {
      "get": {
        "operationId": "KycController_verifyKyc",
        "summary": "Get Kyc Status",
        "description": "This api will get kyc status",
        "parameters": [
          {
            "name": "kycId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved kyc status"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string"
                        },
                        "kycId": {
                          "type": "string"
                        },
                        "kycStatus": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "status"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "KYC"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/kyc/integrator/users": {
      "get": {
        "operationId": "KycController_integratorKycUsers",
        "summary": "Get Integrator Kyc Users",
        "description": "This api will get all integrator kyc users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved kyc users"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "kycId": {
                            "type": "string"
                          },
                          "kycVerified": {
                            "type": "boolean"
                          },
                          "basicDetails": {
                            "type": "object",
                            "properties": {
                              "userEmail": {
                                "type": "string"
                              },
                              "customerKey": {
                                "type": "string"
                              },
                              "firstName": {
                                "type": "string"
                              },
                              "lastName": {
                                "type": "string"
                              },
                              "dob": {
                                "type": "string",
                                "description": "should be of this format YYYY-MM-DD"
                              },
                              "gender": {
                                "type": "string",
                                "enum": [
                                  "M",
                                  "F"
                                ]
                              },
                              "country": {
                                "type": "string",
                                "description": "example GH,KE,NG"
                              },
                              "phone": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "userEmail",
                              "customerKey",
                              "firstName",
                              "lastName",
                              "dob",
                              "gender",
                              "country",
                              "phone"
                            ]
                          },
                          "address": {
                            "type": "object",
                            "properties": {
                              "kycId": {
                                "type": "string"
                              },
                              "street": {
                                "type": "string"
                              },
                              "town": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string",
                                "description": "example GH,KE,NG"
                              }
                            },
                            "required": [
                              "kycId",
                              "street",
                              "town",
                              "country"
                            ]
                          },
                          "document": {
                            "type": "object",
                            "properties": {
                              "kycId": {
                                "type": "string"
                              },
                              "nationality": {
                                "type": "string",
                                "description": "example Ghanian, Nigerian"
                              },
                              "documentNo": {
                                "type": "string"
                              },
                              "documentExpirationDate": {
                                "type": "string",
                                "description": "should be of this format YYYY-MM-DD"
                              },
                              "country": {
                                "type": "string",
                                "description": "example Ghana, Nigeria, Kenya"
                              },
                              "documentName": {
                                "type": "string",
                                "description": "example PASSPORT, GOVERNMENT ID, VOTERS ID"
                              }
                            },
                            "required": [
                              "kycId",
                              "nationality",
                              "documentNo",
                              "documentExpirationDate",
                              "country",
                              "documentName"
                            ]
                          }
                        },
                        "required": [
                          "kycId",
                          "kycVerified",
                          "basicDetails",
                          "address",
                          "document"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "KYC"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/offramp/crypto-to-fiat/mobile-money/request": {
      "post": {
        "operationId": "OfframpMobileMoneyController_onchainRequest",
        "summary": "Generate Off Ramp Request",
        "description": "This endpoint will create a request for off ramp and returns escrow address from which the integrator will send funds to.The request id generated will be used in /onchain/mobile-money api",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "senders_address": {
                    "type": "string",
                    "description": "senders address"
                  },
                  "senders_amount": {
                    "type": "number",
                    "description": "Senders amount"
                  },
                  "chain": {
                    "type": "string",
                    "description": "supported chain",
                    "enum": [
                      "ETHEREUM",
                      "CELO",
                      "AVALANCHE",
                      "POLYGON",
                      "ARBITRUM",
                      "OPTIMISM",
                      "STELLAR",
                      "TRON",
                      "FUSE",
                      "LIGHTNING",
                      "SOLANA",
                      "PROVENANCE",
                      "CARDANO",
                      "HEDERA"
                    ]
                  },
                  "token": {
                    "type": "string",
                    "description": "supported token",
                    "enum": [
                      "CUSD",
                      "USDC",
                      "USDT",
                      "SAT",
                      "BTC",
                      "HASH",
                      "FUSE",
                      "HBAR",
                      "USDGLO"
                    ]
                  }
                },
                "required": [
                  "senders_address",
                  "senders_amount",
                  "chain",
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Request has been successfully created"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string",
                          "description": "Request Id"
                        },
                        "escrow_address": {
                          "type": "string",
                          "description": "Senders amount"
                        },
                        "bolt11": {
                          "type": "string",
                          "description": "Bolt11 invoice"
                        }
                      },
                      "required": [
                        "request_id",
                        "escrow_address"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "OFFRAMP-MOBILE-MONEY"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/offramp/crypto-to-fiat/mobile-money": {
      "post": {
        "operationId": "OfframpMobileMoneyController_onchain",
        "summary": "Send customer fiat from your crypto wallet",
        "description": "This endpoint will withdraw from crypto transaction details you provided  into customer mobile money wallet",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_hash": {
                    "type": "string",
                    "description": "The transaction hash"
                  },
                  "chain": {
                    "type": "string",
                    "description": "supported chain",
                    "enum": [
                      "ETHEREUM",
                      "CELO",
                      "AVALANCHE",
                      "POLYGON",
                      "ARBITRUM",
                      "OPTIMISM",
                      "STELLAR",
                      "TRON",
                      "FUSE",
                      "LIGHTNING",
                      "SOLANA",
                      "PROVENANCE",
                      "CARDANO",
                      "HEDERA"
                    ]
                  },
                  "token": {
                    "type": "string",
                    "description": "supported token",
                    "enum": [
                      "CUSD",
                      "USDC",
                      "USDT",
                      "SAT",
                      "BTC",
                      "HASH",
                      "FUSE",
                      "HBAR",
                      "USDGLO"
                    ]
                  },
                  "wallet_id": {
                    "type": "string",
                    "description": "Should Be Fiat Wallet Id"
                  },
                  "preview": {
                    "type": "boolean",
                    "description": "The preview"
                  },
                  "customer_key": {
                    "type": "string",
                    "description": "The customer key"
                  },
                  "request_id": {
                    "type": "string",
                    "description": "request id obtained from Generate Offramp Request api"
                  },
                  "callback_url": {
                    "type": "string",
                    "description": "The callback url"
                  },
                  "referenceId": {
                    "type": "string"
                  }
                },
                "required": [
                  "transaction_hash",
                  "chain",
                  "token",
                  "wallet_id",
                  "customer_key",
                  "request_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Withdrawal Response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Withdrawal has been successfully created"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "referenceId": {
                          "type": "string"
                        },
                        "referenceNumber": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "message",
                        "referenceId",
                        "referenceNumber"
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Preview Response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Withdrawal preview"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transaction_amount": {
                          "type": "number"
                        },
                        "usd_amount": {
                          "type": "number"
                        },
                        "transaction_cost": {
                          "type": "number"
                        },
                        "transaction_cost_type": {
                          "type": "string",
                          "enum": [
                            "CUSTOM",
                            "DEFAULT",
                            "BILL_ON_INTEGRATOR",
                            "BILL_AFTER_TRANSACTION",
                            "BILL_ON_INVOICE"
                          ]
                        },
                        "local_currency_amount": {
                          "type": "number"
                        },
                        "rates": {
                          "type": "object",
                          "example": {
                            "from": "USD",
                            "to": "GHS",
                            "value": "11.99"
                          }
                        }
                      },
                      "required": [
                        "transaction_amount",
                        "usd_amount",
                        "transaction_cost",
                        "transaction_cost_type",
                        "local_currency_amount",
                        "rates"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "OFFRAMP-MOBILE-MONEY"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/offramp/crypto-to-fiat/mobile-money/status/{reference_id}": {
      "get": {
        "operationId": "OfframpMobileMoneyController_getWithdrawalStatus",
        "summary": "Get Offramp MobileMoney Status",
        "description": "This endpoint will return the status of the withdrawal request.",
        "parameters": [
          {
            "name": "reference_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Withdrawal status retrieved"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "withdrawal id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "amount": {
                          "type": "number",
                          "description": "amount to withdraw",
                          "example": 10
                        },
                        "walletId": {
                          "type": "string",
                          "description": "wallet id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "callbackUrl": {
                          "type": "string",
                          "description": "callback url",
                          "example": "https://example.com"
                        },
                        "referenceId": {
                          "type": "string",
                          "description": "reference id",
                          "example": "5f9b2c7b9c9d6b0017b4e6b1"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "SUCCESSFUL",
                            "FAILED",
                            "CANCELLED",
                            "REVERSED",
                            "IN_PROGRESS",
                            "INITIATED",
                            "ERROR_OCCURRED"
                          ]
                        },
                        "referenceNumber": {
                          "type": "number"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "transactionCost": {
                          "type": "number"
                        },
                        "transactionAmount": {
                          "type": "number"
                        },
                        "customerKey": {
                          "type": "string"
                        },
                        "integratorFeeAmount": {
                          "type": "number"
                        },
                        "integratorFee": {
                          "type": "number"
                        },
                        "integratorCommissionType": {
                          "type": "string",
                          "enum": [
                            "PERCENTAGE",
                            "FLAT",
                            "NONE"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "amount",
                        "walletId",
                        "status",
                        "referenceNumber",
                        "created_at",
                        "transactionCost",
                        "transactionAmount",
                        "customerKey",
                        "integratorFeeAmount",
                        "integratorFee",
                        "integratorCommissionType"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Reference Id not found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "OFFRAMP-MOBILE-MONEY"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/offramp/crypto-to-fiat/supported-chains": {
      "get": {
        "operationId": "OfframpMobileMoneyController_supportedChains",
        "summary": "Off Ramp Supported Chains",
        "description": "This endpoint will return all the chains and coins that are supported by off ramp",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "ok"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "STELLAR": {
                          "type": "array",
                          "example": [
                            "USDC"
                          ]
                        },
                        "CELO": {
                          "type": "array",
                          "example": [
                            "cUSD"
                          ]
                        },
                        "TRON": {
                          "type": "array",
                          "example": [
                            "USDT",
                            "USDC"
                          ]
                        },
                        "FUSE": {
                          "type": "array",
                          "example": [
                            "USDT",
                            "USDC"
                          ]
                        },
                        "AVALANCHE": {
                          "type": "array",
                          "example": [
                            "USDC"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "OFFRAMP-MOBILE-MONEY"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/onramp/fiat-to-crypto/mobile-money": {
      "post": {
        "operationId": "OnrampMobileMoneyController_onchain",
        "summary": "Onramp Mobile Money to Crypto",
        "description": "Crypto deposits are where a customer’s mobile money wallet account is deducted a specific fiat amount which is then converted to a specified stablecoin amount and sent to the integrator’s crypto wallet. From there, the money/ stablecoin is transferred to the customer’s public address that matches the chain. This can also be called on-ramp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "public_address": {
                    "type": "string",
                    "description": "The transaction public address"
                  },
                  "chain": {
                    "type": "string",
                    "description": "supported chain",
                    "enum": [
                      "ETHEREUM",
                      "CELO",
                      "AVALANCHE",
                      "POLYGON",
                      "ARBITRUM",
                      "OPTIMISM",
                      "STELLAR",
                      "TRON",
                      "FUSE",
                      "LIGHTNING",
                      "SOLANA",
                      "PROVENANCE",
                      "CARDANO",
                      "HEDERA"
                    ]
                  },
                  "token": {
                    "type": "string",
                    "description": "supported token",
                    "enum": [
                      "CUSD",
                      "USDC",
                      "USDT",
                      "SAT",
                      "BTC",
                      "HASH",
                      "FUSE",
                      "HBAR",
                      "USDGLO"
                    ]
                  },
                  "wallet_id": {
                    "type": "string",
                    "description": "The wallet id"
                  },
                  "amount": {
                    "type": "number",
                    "description": "The amount to deposit"
                  },
                  "customer_key": {
                    "type": "string",
                    "description": "The customer key"
                  },
                  "callback_url": {
                    "type": "string",
                    "description": "The callback url"
                  },
                  "reference_id": {
                    "type": "string",
                    "description": "Optional reference id"
                  }
                },
                "required": [
                  "chain",
                  "token",
                  "wallet_id",
                  "amount",
                  "customer_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Deposit has been successfully created."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "reference_id": {
                          "type": "string"
                        },
                        "reference_number": {
                          "type": "number"
                        },
                        "redirect_url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "message",
                        "reference_id",
                        "reference_number"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ONRAMP-MOBILE-MONEY"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/onramp/fiat-to-crypto/mobile-money/status/{reference_id}": {
      "get": {
        "operationId": "OnrampMobileMoneyController_getWithdrawalStatus",
        "summary": "Get Onramp Status",
        "description": "This endpoint will be used to get the status of the deposit onchain request",
        "parameters": [
          {
            "name": "reference_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Deposit status successfully retrieved."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "mobile_money": {
                          "description": "mobile money status",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "deposit id",
                                  "example": "5f9b2c7b9c9d6b0017b4e6b1"
                                },
                                "amount": {
                                  "type": "number",
                                  "description": "amount to deposit",
                                  "example": 10
                                },
                                "wallet_id": {
                                  "type": "string",
                                  "description": "deposit id",
                                  "example": "5f9b2c7b9c9d6b0017b4e6b1"
                                },
                                "callback_url": {
                                  "type": "string",
                                  "description": "callback url",
                                  "example": "https://example.com"
                                },
                                "reference_id": {
                                  "type": "string",
                                  "description": "reference id",
                                  "example": "5f9b2c7b9c9d6b0017b4e6b1"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "PENDING",
                                    "SUCCESSFUL",
                                    "FAILED",
                                    "CANCELLED",
                                    "REVERSED",
                                    "IN_PROGRESS",
                                    "DUPLICATE",
                                    "ERROR_OCCURRED"
                                  ]
                                },
                                "reference_number": {
                                  "type": "number"
                                },
                                "created_at": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "transaction_cost": {
                                  "type": "number"
                                },
                                "transaction_amount": {
                                  "type": "number"
                                },
                                "customer_key": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "amount",
                                "wallet_id",
                                "status",
                                "reference_number",
                                "created_at",
                                "transaction_cost",
                                "transaction_amount",
                                "customer_key"
                              ]
                            }
                          ]
                        },
                        "onchain": {
                          "description": "onchain status",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "public_address": {
                                  "type": "string",
                                  "description": "The transaction public address"
                                },
                                "chain": {
                                  "type": "string",
                                  "description": "supported chain",
                                  "enum": [
                                    "ETHEREUM",
                                    "CELO",
                                    "AVALANCHE",
                                    "POLYGON",
                                    "ARBITRUM",
                                    "OPTIMISM",
                                    "STELLAR",
                                    "TRON",
                                    "FUSE",
                                    "LIGHTNING",
                                    "SOLANA",
                                    "PROVENANCE",
                                    "CARDANO",
                                    "HEDERA"
                                  ]
                                },
                                "token": {
                                  "type": "string",
                                  "description": "supported token",
                                  "enum": [
                                    "CUSD",
                                    "USDC",
                                    "USDT",
                                    "SAT",
                                    "BTC",
                                    "HASH",
                                    "FUSE",
                                    "HBAR",
                                    "USDGLO"
                                  ]
                                },
                                "reference_id": {
                                  "type": "string",
                                  "description": "Optional reference id"
                                },
                                "crypto_amount": {
                                  "type": "string",
                                  "description": "crypto amount"
                                },
                                "transaction_hash": {
                                  "type": "string",
                                  "description": "transaction hash"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "transaction status",
                                  "enum": [
                                    "PENDING",
                                    "SUCCESSFUL",
                                    "FAILED",
                                    "CANCELLED",
                                    "REVERSED",
                                    "IN_PROGRESS",
                                    "DUPLICATE",
                                    "ERROR_OCCURRED"
                                  ]
                                },
                                "crypto_received_status": {
                                  "type": "string",
                                  "description": "crypto received status",
                                  "enum": [
                                    "PENDING",
                                    "SUCCESSFUL",
                                    "FAILED",
                                    "CANCELLED",
                                    "REVERSED",
                                    "IN_PROGRESS",
                                    "DUPLICATE",
                                    "ERROR_OCCURRED"
                                  ]
                                }
                              },
                              "required": [
                                "chain",
                                "token"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "mobile_money",
                        "onchain"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ONRAMP-MOBILE-MONEY"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/onramp/supported-chains": {
      "get": {
        "operationId": "OnrampMobileMoneyController_getSupportedChains",
        "summary": "Get Onramp MobileMoney Supported Chains",
        "description": "This endpoint will be used to get the supported chains for deposit onchain",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Onramp onchain supported chains retrieved successfully."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "FUSE": {
                          "type": "array",
                          "example": [
                            "USDT",
                            "USDC"
                          ]
                        },
                        "CELO": {
                          "type": "array",
                          "example": [
                            "CUSD"
                          ]
                        },
                        "ETHEREUM": {
                          "type": "array",
                          "example": [
                            "USDT",
                            "USDC"
                          ]
                        },
                        "POLYGON": {
                          "type": "array",
                          "example": [
                            "USDC"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ONRAMP-MOBILE-MONEY"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/onramp/fiat-to-crypto/wallet": {
      "post": {
        "operationId": "OnrampFiatWalletController_onchainWalletWithdrawal",
        "summary": "Send from Fiat Wallet to Crypto Wallet",
        "description": "This api give you the opportunity to withdraw from your kotanipay fiat wallet to a crypto address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "source_wallet": {
                    "type": "string",
                    "description": "source wallet, should be fiat wallet"
                  },
                  "receivers_address": {
                    "type": "string",
                    "description": "receivers address"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Senders amount"
                  },
                  "chain": {
                    "type": "string",
                    "description": "supported chain",
                    "enum": [
                      "ETHEREUM",
                      "CELO",
                      "AVALANCHE",
                      "POLYGON",
                      "ARBITRUM",
                      "OPTIMISM",
                      "STELLAR",
                      "TRON",
                      "FUSE",
                      "LIGHTNING",
                      "SOLANA",
                      "PROVENANCE",
                      "CARDANO",
                      "HEDERA"
                    ]
                  },
                  "token": {
                    "type": "string",
                    "description": "supported token",
                    "enum": [
                      "CUSD",
                      "USDC",
                      "USDT",
                      "SAT",
                      "BTC",
                      "HASH",
                      "FUSE",
                      "HBAR",
                      "USDGLO"
                    ]
                  },
                  "preview": {
                    "type": "boolean",
                    "description": "preview, set preview to true to get transaction data with rates"
                  },
                  "callback_url": {
                    "type": "string",
                    "description": "callback url"
                  }
                },
                "required": [
                  "source_wallet",
                  "receivers_address",
                  "amount",
                  "chain",
                  "token",
                  "callback_url"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Wallet Withdrawal has been successfully created"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "transaction_hash": {
                          "type": "string"
                        },
                        "reference_id": {
                          "type": "string"
                        },
                        "reference_number": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "transaction_hash",
                        "reference_id",
                        "reference_number"
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Preview Retrieved Successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transactionCostInFiat": {
                          "type": "number"
                        },
                        "transactionAmountInFiat": {
                          "type": "number"
                        },
                        "transactionAmountInUsd": {
                          "type": "number"
                        },
                        "transactionAmountInUsdRate": {
                          "type": "object"
                        },
                        "amountInFiat": {
                          "type": "number"
                        },
                        "amountInFiatRate": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "transactionCostInFiat",
                        "transactionAmountInFiat",
                        "transactionAmountInUsd",
                        "transactionAmountInUsdRate",
                        "amountInFiat",
                        "amountInFiatRate"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid API Key"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ONRAMP-FIAT-WALLET"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v3/onramp/fiat-to-crypto/wallet/status/{reference_id}": {
      "get": {
        "operationId": "OnrampFiatWalletController_onchainWalletWithdrawalStatus",
        "summary": "Get transaction status",
        "description": "This api give you the opportunity to check transaction status of onchain/wallet withdrawal",
        "parameters": [
          {
            "name": "reference_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ONRAMP-FIAT-WALLET"
        ],
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "KOTANI PAY API PLATFORM",
    "description": "",
    "version": "3.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://sandbox-api.kotanipay.io",
      "description": "Sandbox"
    }
  ],
  "components": {
    "securitySchemes": {
      "JWT": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "IntegratorResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": "xxxxxxxxxxxxxxxxxxxxxxxx"
          },
          "organization": {
            "type": "string",
            "description": "organization",
            "example": "A&B Company"
          },
          "first_name": {
            "type": "string",
            "description": "first_name",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "last_name",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "description": "email",
            "example": "ab@gmail.com"
          },
          "phone": {
            "type": "string",
            "description": "phone",
            "example": "+xxx xxx xxx xxx"
          }
        },
        "required": [
          "organization",
          "first_name",
          "last_name",
          "email",
          "phone"
        ]
      },
      "CreateIntegratorDto": {
        "type": "object",
        "properties": {
          "organization": {
            "type": "string",
            "description": "organization",
            "example": "A&B Company"
          },
          "first_name": {
            "type": "string",
            "description": "first_name",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "last_name",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "description": "email",
            "example": "ab@gmail.com"
          },
          "phone": {
            "type": "string",
            "description": "phone",
            "example": "+xxx xxx xxx xxx"
          },
          "country_code": {
            "type": "string",
            "description": "country_code",
            "example": "US"
          }
        },
        "required": [
          "organization",
          "first_name",
          "last_name",
          "email",
          "phone",
          "country_code"
        ]
      },
      "VerifyResponseDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "user_id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "session_id": {
            "type": "string",
            "description": "session_id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "token_id": {
            "type": "string",
            "description": "token_id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "token": {
            "type": "string",
            "description": "JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          },
          "refresh_token": {
            "type": "string",
            "description": "JWT refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          }
        },
        "required": [
          "user_id",
          "session_id",
          "token_id",
          "token",
          "refresh_token"
        ]
      },
      "AuthSessionDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "user_id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "session_id": {
            "type": "string",
            "description": "session_id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "token_id": {
            "type": "string",
            "description": "token_id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "created_at": {
            "type": "string",
            "description": "session creation date",
            "example": "2020-10-30T07:00:00.000Z"
          },
          "updated_at": {
            "type": "string",
            "description": "session last updated date",
            "example": "2020-10-30T07:00:00.000Z"
          }
        },
        "required": [
          "user_id",
          "session_id",
          "token_id",
          "created_at",
          "updated_at"
        ]
      },
      "RefreshTokenResponseDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "user_id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "session_id": {
            "type": "string",
            "description": "session_id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "token": {
            "type": "string",
            "description": "JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          },
          "refresh_token": {
            "type": "string",
            "description": "JWT refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          }
        },
        "required": [
          "user_id",
          "session_id",
          "token",
          "refresh_token"
        ]
      },
      "ApiKeyHashResponse": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string",
            "description": "hash",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          }
        },
        "required": [
          "hash"
        ]
      },
      "ApiKeyResponseDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "key",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          }
        },
        "required": [
          "key"
        ]
      },
      "FiatWalletResponseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the wallet",
            "example": "My Wallet"
          },
          "type": {
            "type": "string",
            "description": "Select wallet type",
            "enum": [
              "crypto",
              "fiat"
            ],
            "example": "eg crypto or fiat"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the wallet",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF"
            ],
            "example": "eg NGN or GHS or KES"
          },
          "integrator": {
            "type": "string",
            "description": "The integrator of the wallet",
            "example": "4440cb6a-f7c7-11ed-b67e-0242ac120002"
          },
          "status": {
            "type": "string",
            "description": "The status of the wallet",
            "enum": [
              "active",
              "inactive",
              "suspended",
              "deleted"
            ],
            "example": "eg active or inactive"
          },
          "id": {
            "type": "string",
            "description": "The id of the wallet",
            "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
          },
          "balance": {
            "type": "number",
            "description": "The amount of the wallet",
            "example": 1000
          },
          "deposit_balance": {
            "type": "number",
            "description": "Amount of the wallet that has been deposited so far",
            "example": 1000
          }
        },
        "required": [
          "name",
          "type",
          "currency",
          "integrator",
          "id",
          "balance",
          "deposit_balance"
        ]
      },
      "CreateFiatWalletDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the wallet",
            "example": "My Wallet"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the wallet",
            "enum": [
              "KES",
              "GHS",
              "NGN",
              "ZAR",
              "USD",
              "XOF",
              "ZMW",
              "XAF",
              "CDF",
              "TZS",
              "UGX",
              "EGP",
              "MWK",
              "RWF"
            ],
            "example": "eg NGN or GHS or KES"
          }
        },
        "required": [
          "name",
          "currency"
        ]
      },
      "updateFiatWalletDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the wallet",
            "example": "My Wallet"
          }
        },
        "required": [
          "name"
        ]
      },
      "CryptoWalletResponseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the wallet",
            "example": "My Wallet"
          },
          "balance": {
            "type": "number",
            "description": "The amount of the wallet",
            "example": 1000
          },
          "address": {
            "type": "string",
            "description": "Wallet transaction address",
            "example": "0x1234567890"
          },
          "customAddress": {
            "type": "string",
            "description": "custom for deposits public address",
            "example": "0x1234567890"
          },
          "type": {
            "type": "string",
            "description": "Select wallet type",
            "enum": [
              "crypto",
              "fiat"
            ],
            "example": "eg crypto or fiat"
          },
          "coin": {
            "type": "string",
            "description": "The currency of the wallet",
            "enum": [
              "CUSD",
              "USDC",
              "USDT",
              "SAT",
              "BTC",
              "HASH",
              "FUSE",
              "HBAR",
              "USDGLO"
            ],
            "example": "eg CUSD or USDC or USDT"
          },
          "chain": {
            "type": "string",
            "description": "The chain of the wallet.Its required if the wallet is a crypto wallet",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA"
            ],
            "example": "eg CELO or ETHEREUM or AVALANCHE or POLYGON"
          },
          "id": {
            "type": "string",
            "description": "The id of the wallet",
            "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
          }
        },
        "required": [
          "name",
          "balance",
          "type",
          "coin",
          "id"
        ]
      },
      "CreateCryptoWalletDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the wallet",
            "example": "My Wallet"
          },
          "customAddress": {
            "type": "string",
            "description": "custom for deposits public address",
            "example": "0x1234567890"
          },
          "coin": {
            "type": "string",
            "description": "The currency of the wallet",
            "enum": [
              "CUSD",
              "USDC",
              "USDT",
              "SAT",
              "BTC",
              "HASH",
              "FUSE",
              "HBAR",
              "USDGLO"
            ],
            "example": "eg CUSD or USDC or USDT"
          },
          "chain": {
            "type": "string",
            "description": "The chain of the wallet.Its required if the wallet is a crypto wallet",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA"
            ],
            "example": "eg CELO or ETHEREUM or AVALANCHE or POLYGON"
          }
        },
        "required": [
          "name",
          "coin"
        ]
      },
      "GetCryptoWalletResponseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the wallet",
            "example": "My Wallet"
          },
          "balance": {
            "type": "number",
            "description": "The amount of the wallet",
            "example": 1000
          },
          "privateAddress": {
            "type": "string",
            "description": "Wallet private address",
            "example": "0x1234567890"
          },
          "publicAddress": {
            "type": "string",
            "description": "Wallet public address",
            "example": "0x1234567890"
          },
          "address": {
            "type": "string",
            "description": "Wallet transaction address",
            "example": "0x1234567890"
          },
          "customAddress": {
            "type": "string",
            "description": "custom for deposits public address",
            "example": "0x1234567890"
          },
          "type": {
            "type": "string",
            "description": "Select wallet type",
            "enum": [
              "crypto",
              "fiat"
            ],
            "example": "eg crypto or fiat"
          },
          "coin": {
            "type": "string",
            "description": "The currency of the wallet",
            "enum": [
              "CUSD",
              "USDC",
              "USDT",
              "SAT",
              "BTC",
              "HASH",
              "FUSE",
              "HBAR",
              "USDGLO"
            ],
            "example": "eg CUSD or USDC or USDT"
          },
          "chain": {
            "type": "string",
            "description": "The chain of the wallet.Its required if the wallet is a crypto wallet",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA"
            ],
            "example": "eg CELO or ETHEREUM or AVALANCHE or POLYGON"
          },
          "id": {
            "type": "string",
            "description": "The id of the wallet",
            "example": "f053188c-d924-4423-bbba-871eda0b1cd9"
          }
        },
        "required": [
          "name",
          "balance",
          "type",
          "coin",
          "id"
        ]
      },
      "updateWalletDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the wallet",
            "example": "My Wallet"
          },
          "publicAddress": {
            "type": "string",
            "description": "You can attach a wallet to receive deposits",
            "example": "0x1234567890"
          },
          "chain": {
            "type": "string",
            "description": "The chain of the wallet.Its required if the wallet is a crypto wallet",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA"
            ],
            "example": "eg CELO or ETHEREUM or AVALANCHE or POLYGON"
          }
        },
        "required": [
          "name"
        ]
      },
      "BioDataDto": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "John",
            "description": "First name"
          },
          "surname": {
            "type": "string",
            "example": "Doe",
            "description": "Surname"
          },
          "gender": {
            "type": "string",
            "example": "Male",
            "description": "Gender"
          },
          "date_of_birth": {
            "type": "string",
            "example": "1990-01-01",
            "description": "Date of birth"
          },
          "occupation": {
            "type": "string",
            "example": "Engineer",
            "description": "Occupation"
          },
          "country_code": {
            "type": "string",
            "enum": [
              "NGA",
              "ZAF",
              "GHA",
              "CIV"
            ],
            "example": "NGA",
            "description": "Country code"
          }
        },
        "required": [
          "first_name",
          "surname",
          "gender",
          "date_of_birth",
          "occupation",
          "country_code"
        ]
      },
      "ContactAddressDataDto": {
        "type": "object",
        "properties": {
          "line": {
            "type": "string",
            "example": "123 Street",
            "description": "Address line"
          },
          "province": {
            "type": "string",
            "example": "Province",
            "description": "Province"
          },
          "municipality": {
            "type": "string",
            "example": "Municipality",
            "description": "Municipality"
          },
          "city": {
            "type": "string",
            "example": "City",
            "description": "City"
          }
        },
        "required": [
          "line",
          "province",
          "municipality",
          "city"
        ]
      },
      "ContactDataDto": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "example": "+123456789",
            "description": "Phone number"
          },
          "email_address": {
            "type": "string",
            "example": "john@example.com",
            "description": "Email address"
          },
          "address": {
            "example": {
              "line": "123 Street",
              "province": "Province",
              "municipality": "Municipality",
              "city": "City"
            },
            "description": "Address",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "line": {
                    "type": "string",
                    "example": "123 Street",
                    "description": "Address line"
                  },
                  "province": {
                    "type": "string",
                    "example": "Province",
                    "description": "Province"
                  },
                  "municipality": {
                    "type": "string",
                    "example": "Municipality",
                    "description": "Municipality"
                  },
                  "city": {
                    "type": "string",
                    "example": "City",
                    "description": "City"
                  }
                },
                "required": [
                  "line",
                  "province",
                  "municipality",
                  "city"
                ]
              }
            ]
          }
        },
        "required": [
          "phone_number",
          "email_address",
          "address"
        ]
      },
      "KycDataDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "BANK_VERIFICATION_NUMBER",
            "description": "Identification type",
            "enum": [
              "BANK_VERIFICATION_NUMBER",
              "NATIONAL_IDENTIFICATION_NUMBER",
              "DRIVERS_LICENSE",
              "TRAVEL_PASSPORT"
            ]
          },
          "number": {
            "type": "string",
            "example": "123456789",
            "description": "Identification number"
          }
        },
        "required": [
          "type",
          "number"
        ]
      },
      "CustomerResponseDto": {
        "type": "object",
        "properties": {
          "bio": {
            "description": "Biographical data",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "John",
                    "description": "First name"
                  },
                  "surname": {
                    "type": "string",
                    "example": "Doe",
                    "description": "Surname"
                  },
                  "gender": {
                    "type": "string",
                    "example": "Male",
                    "description": "Gender"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "example": "1990-01-01",
                    "description": "Date of birth"
                  },
                  "occupation": {
                    "type": "string",
                    "example": "Engineer",
                    "description": "Occupation"
                  },
                  "country_code": {
                    "type": "string",
                    "enum": [
                      "NGA",
                      "ZAF",
                      "GHA",
                      "CIV"
                    ],
                    "example": "NGA",
                    "description": "Country code"
                  }
                },
                "required": [
                  "first_name",
                  "surname",
                  "gender",
                  "date_of_birth",
                  "occupation",
                  "country_code"
                ]
              }
            ]
          },
          "contact": {
            "description": "Contact data",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "phone_number": {
                    "type": "string",
                    "example": "+123456789",
                    "description": "Phone number"
                  },
                  "email_address": {
                    "type": "string",
                    "example": "john@example.com",
                    "description": "Email address"
                  },
                  "address": {
                    "example": {
                      "line": "123 Street",
                      "province": "Province",
                      "municipality": "Municipality",
                      "city": "City"
                    },
                    "description": "Address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line": {
                            "type": "string",
                            "example": "123 Street",
                            "description": "Address line"
                          },
                          "province": {
                            "type": "string",
                            "example": "Province",
                            "description": "Province"
                          },
                          "municipality": {
                            "type": "string",
                            "example": "Municipality",
                            "description": "Municipality"
                          },
                          "city": {
                            "type": "string",
                            "example": "City",
                            "description": "City"
                          }
                        },
                        "required": [
                          "line",
                          "province",
                          "municipality",
                          "city"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "phone_number",
                  "email_address",
                  "address"
                ]
              }
            ]
          },
          "country_code": {
            "type": "string",
            "enum": [
              "GHA",
              "NG",
              "KE",
              "ZA",
              "CIV",
              "ZM",
              "CMR",
              "COD",
              "SEN",
              "TZ",
              "MWI",
              "UG",
              "EG",
              "RW"
            ],
            "example": "GHA or KE"
          },
          "reference": {
            "type": "string",
            "example": "Ref123",
            "description": "Reference"
          },
          "id": {
            "type": "string",
            "example": "123456789",
            "description": "Customer ID"
          },
          "kyc": {
            "description": "KYC data",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "BANK_VERIFICATION_NUMBER",
                    "description": "Identification type",
                    "enum": [
                      "BANK_VERIFICATION_NUMBER",
                      "NATIONAL_IDENTIFICATION_NUMBER",
                      "DRIVERS_LICENSE",
                      "TRAVEL_PASSPORT"
                    ]
                  },
                  "number": {
                    "type": "string",
                    "example": "123456789",
                    "description": "Identification number"
                  }
                },
                "required": [
                  "type",
                  "number"
                ]
              }
            ]
          },
          "customer_key": {
            "type": "string",
            "example": "002fa511a6941f1242c6c6c0cf6aa189",
            "description": "Customer key"
          }
        },
        "required": [
          "bio",
          "contact",
          "country_code",
          "kyc",
          "customer_key"
        ]
      },
      "CreateCustomerDto": {
        "type": "object",
        "properties": {
          "bio": {
            "description": "Biographical data",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "John",
                    "description": "First name"
                  },
                  "surname": {
                    "type": "string",
                    "example": "Doe",
                    "description": "Surname"
                  },
                  "gender": {
                    "type": "string",
                    "example": "Male",
                    "description": "Gender"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "example": "1990-01-01",
                    "description": "Date of birth"
                  },
                  "occupation": {
                    "type": "string",
                    "example": "Engineer",
                    "description": "Occupation"
                  },
                  "country_code": {
                    "type": "string",
                    "enum": [
                      "NGA",
                      "ZAF",
                      "GHA",
                      "CIV"
                    ],
                    "example": "NGA",
                    "description": "Country code"
                  }
                },
                "required": [
                  "first_name",
                  "surname",
                  "gender",
                  "date_of_birth",
                  "occupation",
                  "country_code"
                ]
              }
            ]
          },
          "kyc": {
            "description": "KYC data",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "BANK_VERIFICATION_NUMBER",
                    "description": "Identification type",
                    "enum": [
                      "BANK_VERIFICATION_NUMBER",
                      "NATIONAL_IDENTIFICATION_NUMBER",
                      "DRIVERS_LICENSE",
                      "TRAVEL_PASSPORT"
                    ]
                  },
                  "number": {
                    "type": "string",
                    "example": "123456789",
                    "description": "Identification number"
                  }
                },
                "required": [
                  "type",
                  "number"
                ]
              }
            ]
          },
          "contact": {
            "description": "Contact data",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "phone_number": {
                    "type": "string",
                    "example": "+123456789",
                    "description": "Phone number"
                  },
                  "email_address": {
                    "type": "string",
                    "example": "john@example.com",
                    "description": "Email address"
                  },
                  "address": {
                    "example": {
                      "line": "123 Street",
                      "province": "Province",
                      "municipality": "Municipality",
                      "city": "City"
                    },
                    "description": "Address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line": {
                            "type": "string",
                            "example": "123 Street",
                            "description": "Address line"
                          },
                          "province": {
                            "type": "string",
                            "example": "Province",
                            "description": "Province"
                          },
                          "municipality": {
                            "type": "string",
                            "example": "Municipality",
                            "description": "Municipality"
                          },
                          "city": {
                            "type": "string",
                            "example": "City",
                            "description": "City"
                          }
                        },
                        "required": [
                          "line",
                          "province",
                          "municipality",
                          "city"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "phone_number",
                  "email_address",
                  "address"
                ]
              }
            ]
          },
          "country_code": {
            "type": "string",
            "enum": [
              "GHA",
              "NG",
              "KE",
              "ZA",
              "CIV",
              "ZM",
              "CMR",
              "COD",
              "SEN",
              "TZ",
              "MWI",
              "UG",
              "EG",
              "RW"
            ],
            "example": "GHA or KE"
          },
          "reference": {
            "type": "string",
            "example": "Ref123",
            "description": "Reference"
          }
        },
        "required": [
          "bio",
          "kyc",
          "contact",
          "country_code"
        ]
      },
      "UpdateBioDataDto": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "JERAHMEEL",
            "description": "First name"
          },
          "middle_name": {
            "type": "string",
            "example": "OVIE",
            "description": "Middle name"
          },
          "surname": {
            "type": "string",
            "example": "ANIBOR",
            "description": "Surname"
          },
          "gender": {
            "type": "string",
            "example": "MALE",
            "description": "Gender"
          },
          "date_of_birth": {
            "type": "string",
            "example": "19-10-1992",
            "description": "Date of birth"
          },
          "occupation": {
            "type": "string",
            "example": "ENGINEER",
            "description": "Occupation"
          },
          "country_code": {
            "type": "string",
            "example": "NGA",
            "description": "Country code"
          }
        }
      },
      "UpdateAddressDto": {
        "type": "object",
        "properties": {
          "line": {
            "type": "string",
            "example": "9, Fedrick Avenue, University View Estate, Olokonla, Ajah",
            "description": "Address line"
          },
          "province": {
            "type": "string",
            "example": "Lagos",
            "description": "Province"
          },
          "municipality": {
            "type": "string",
            "example": "Alimisho",
            "description": "Municipality"
          },
          "city": {
            "type": "string",
            "example": "Ajah",
            "description": "City"
          },
          "customer_key": {
            "type": "string",
            "example": "002fa511a6941f1242c6c6c0cf6aa189",
            "description": "Customer key"
          }
        }
      },
      "UpdateContactDataDto": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "example": "08131533091",
            "description": "Phone number"
          },
          "email_address": {
            "type": "string",
            "example": "ovie@redbiller.email",
            "description": "Email address"
          },
          "address": {
            "description": "Address",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "line": {
                    "type": "string",
                    "example": "9, Fedrick Avenue, University View Estate, Olokonla, Ajah",
                    "description": "Address line"
                  },
                  "province": {
                    "type": "string",
                    "example": "Lagos",
                    "description": "Province"
                  },
                  "municipality": {
                    "type": "string",
                    "example": "Alimisho",
                    "description": "Municipality"
                  },
                  "city": {
                    "type": "string",
                    "example": "Ajah",
                    "description": "City"
                  },
                  "customer_key": {
                    "type": "string",
                    "example": "002fa511a6941f1242c6c6c0cf6aa189",
                    "description": "Customer key"
                  }
                }
              }
            ]
          }
        }
      },
      "UpdateKYCDataDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "BVN_VERIFICATION",
            "description": "KYC type"
          },
          "number": {
            "type": "string",
            "example": "22342367371",
            "description": "KYC number"
          },
          "url": {
            "type": "string",
            "description": "this could be ID photo url or BVN verification image url"
          }
        }
      },
      "MobileMoneyCustomerDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "country_code": {
            "type": "string",
            "enum": [
              "GHA",
              "NG",
              "KE",
              "ZA",
              "CIV",
              "ZM",
              "CMR",
              "COD",
              "SEN",
              "TZ",
              "MWI",
              "UG",
              "EG",
              "RW"
            ],
            "example": "GHA or KE"
          },
          "network": {
            "type": "string",
            "enum": [
              "MTN",
              "AIRTEL",
              "VODAFONE",
              "TIGO",
              "ORANGE",
              "NOT_SUPPORTED",
              "ZAMTEL",
              "MEPESA"
            ],
            "description": "only required for GH transactions",
            "example": "MTN or VODAFONE or AIRTEL"
          },
          "customer_key": {
            "type": "string"
          },
          "account_name": {
            "type": "string"
          },
          "integrator": {
            "type": "string"
          }
        },
        "required": [
          "phone_number",
          "country_code"
        ]
      },
      "CreateMobileMoneyCustomerDto": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string"
          },
          "country_code": {
            "type": "string",
            "enum": [
              "GHA",
              "NG",
              "KE",
              "ZA",
              "CIV",
              "ZM",
              "CMR",
              "COD",
              "SEN",
              "TZ",
              "MWI",
              "UG",
              "EG",
              "RW"
            ],
            "example": "GHA or KE"
          },
          "network": {
            "type": "string",
            "enum": [
              "MTN",
              "AIRTEL",
              "VODAFONE",
              "TIGO",
              "ORANGE",
              "NOT_SUPPORTED",
              "ZAMTEL",
              "MEPESA"
            ],
            "description": "only required for GH transactions",
            "example": "MTN or VODAFONE or AIRTEL"
          },
          "account_name": {
            "type": "string"
          }
        },
        "required": [
          "phone_number",
          "country_code"
        ]
      },
      "UpdateMobileMoneyCustomerDto": {
        "type": "object",
        "properties": {
          "network": {
            "type": "string",
            "enum": [
              "MTN",
              "AIRTEL",
              "VODAFONE",
              "TIGO",
              "ORANGE",
              "NOT_SUPPORTED",
              "ZAMTEL",
              "MEPESA"
            ],
            "description": "only required for GH transactions",
            "example": "MTN or VODAFONE or AIRTEL"
          },
          "account_name": {
            "type": "string"
          },
          "country_code": {
            "type": "string",
            "enum": [
              "GHA",
              "NG",
              "KE",
              "ZA",
              "CIV",
              "ZM",
              "CMR",
              "COD",
              "SEN",
              "TZ",
              "MWI",
              "UG",
              "EG",
              "RW"
            ],
            "example": "GHA or KE"
          },
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "date_of_birth": {
            "type": "string",
            "example": "1990-01-01"
          },
          "id_number": {
            "type": "string",
            "example": "123456789"
          },
          "image": {
            "type": "string"
          },
          "id_type": {
            "type": "string",
            "enum": [
              "NATIONAL_ID",
              "ECOWAS_ID"
            ],
            "example": "ECOWAS_ID or NATIONAL_ID"
          }
        }
      },
      "WithdrawResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "message",
          "referenceId",
          "referenceNumber"
        ]
      },
      "CreateWithdrawalDto": {
        "type": "object",
        "properties": {
          "customer_key": {
            "type": "string",
            "example": "customer-key-123",
            "description": "Customer key"
          },
          "amount": {
            "type": "number",
            "description": "amount to withdraw",
            "example": 10
          },
          "walletId": {
            "type": "string",
            "description": "wallet id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "callbackUrl": {
            "type": "string",
            "description": "callback url",
            "example": "https://example.com"
          },
          "referenceId": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          }
        },
        "required": [
          "customer_key",
          "amount",
          "walletId"
        ]
      },
      "CreateBankWithdrawDto": {
        "type": "object",
        "properties": {
          "customer_key": {
            "type": "string",
            "example": "customer-key-123",
            "description": "Customer key"
          },
          "amount": {
            "type": "number",
            "description": "amount to withdraw",
            "example": 10
          },
          "walletId": {
            "type": "string",
            "description": "wallet id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "callbackUrl": {
            "type": "string",
            "description": "callback url",
            "example": "https://example.com"
          },
          "referenceId": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          }
        },
        "required": [
          "customer_key",
          "amount",
          "walletId"
        ]
      },
      "WithdrawStatusResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "withdrawal id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "amount": {
            "type": "number",
            "description": "amount to withdraw",
            "example": 10
          },
          "walletId": {
            "type": "string",
            "description": "wallet id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "callbackUrl": {
            "type": "string",
            "description": "callback url",
            "example": "https://example.com"
          },
          "referenceId": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "SUCCESSFUL",
              "FAILED",
              "CANCELLED",
              "REVERSED",
              "IN_PROGRESS",
              "INITIATED",
              "ERROR_OCCURRED"
            ]
          },
          "referenceNumber": {
            "type": "number"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "transactionCost": {
            "type": "number"
          },
          "transactionAmount": {
            "type": "number"
          },
          "customerKey": {
            "type": "string"
          },
          "integratorFeeAmount": {
            "type": "number"
          },
          "integratorFee": {
            "type": "number"
          },
          "integratorCommissionType": {
            "type": "string",
            "enum": [
              "PERCENTAGE",
              "FLAT",
              "NONE"
            ]
          }
        },
        "required": [
          "id",
          "amount",
          "walletId",
          "status",
          "referenceNumber",
          "created_at",
          "transactionCost",
          "transactionAmount",
          "customerKey",
          "integratorFeeAmount",
          "integratorFee",
          "integratorCommissionType"
        ]
      },
      "DepositResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "reference_id": {
            "type": "string"
          },
          "reference_number": {
            "type": "number"
          },
          "redirect_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "message",
          "reference_id",
          "reference_number"
        ]
      },
      "CreateDepositDto": {
        "type": "object",
        "properties": {
          "customer_key": {
            "type": "string",
            "example": "customer-key-123",
            "description": "Customer key"
          },
          "amount": {
            "type": "number",
            "description": "amount to deposit",
            "example": 10
          },
          "wallet_id": {
            "type": "string",
            "description": "deposit id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "callback_url": {
            "type": "string",
            "description": "callback url",
            "example": "https://example.com"
          },
          "reference_id": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          }
        },
        "required": [
          "customer_key",
          "amount",
          "wallet_id"
        ]
      },
      "DepositStatusResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "deposit id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "amount": {
            "type": "number",
            "description": "amount to deposit",
            "example": 10
          },
          "wallet_id": {
            "type": "string",
            "description": "deposit id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "callback_url": {
            "type": "string",
            "description": "callback url",
            "example": "https://example.com"
          },
          "reference_id": {
            "type": "string",
            "description": "reference id",
            "example": "5f9b2c7b9c9d6b0017b4e6b1"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "SUCCESSFUL",
              "FAILED",
              "CANCELLED",
              "REVERSED",
              "IN_PROGRESS",
              "DUPLICATE",
              "ERROR_OCCURRED"
            ]
          },
          "reference_number": {
            "type": "number"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "transaction_cost": {
            "type": "number"
          },
          "transaction_amount": {
            "type": "number"
          },
          "customer_key": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "amount",
          "wallet_id",
          "status",
          "reference_number",
          "created_at",
          "transaction_cost",
          "transaction_amount",
          "customer_key"
        ]
      },
      "RateResponseDto": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "From currency",
            "example": "USD"
          },
          "to": {
            "type": "string",
            "description": "To currency",
            "example": "EUR"
          },
          "value": {
            "type": "string",
            "description": "Rate value",
            "example": "0.85"
          }
        },
        "required": [
          "from",
          "to",
          "value"
        ]
      },
      "OnrampRateRequest": {
        "type": "object",
        "properties": {
          "from": {
            "type": "object",
            "description": "From currency",
            "example": "KES"
          },
          "to": {
            "type": "object",
            "description": "To currency",
            "example": "USDT"
          },
          "fiatAmount": {
            "type": "number",
            "description": "Rate value",
            "example": "0.85"
          }
        },
        "required": [
          "from",
          "to",
          "fiatAmount"
        ]
      },
      "OfframpRateRequest": {
        "type": "object",
        "properties": {
          "from": {
            "type": "object",
            "description": "From currency",
            "example": "USDC"
          },
          "to": {
            "type": "object",
            "description": "To currency",
            "example": "EUR"
          },
          "cryptoAmount": {
            "type": "number",
            "description": "Rate value",
            "example": "0.85"
          }
        },
        "required": [
          "from",
          "to",
          "cryptoAmount"
        ]
      },
      "ApiResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "The status of the response",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "The message of the response",
            "example": "Response message"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "success",
          "message",
          "data"
        ]
      },
      "KycResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "kycId": {
            "type": "string"
          },
          "kycStatus": {
            "type": "boolean"
          }
        },
        "required": [
          "status"
        ]
      },
      "KycBasicDetailsDto": {
        "type": "object",
        "properties": {
          "userEmail": {
            "type": "string"
          },
          "customerKey": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "description": "should be of this format YYYY-MM-DD"
          },
          "gender": {
            "type": "string",
            "enum": [
              "M",
              "F"
            ]
          },
          "country": {
            "type": "string",
            "description": "example GH,KE,NG"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": [
          "userEmail",
          "customerKey",
          "firstName",
          "lastName",
          "dob",
          "gender",
          "country",
          "phone"
        ]
      },
      "KycAddressDto": {
        "type": "object",
        "properties": {
          "kycId": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "town": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "description": "example GH,KE,NG"
          }
        },
        "required": [
          "kycId",
          "street",
          "town",
          "country"
        ]
      },
      "KycDocumentDto": {
        "type": "object",
        "properties": {
          "kycId": {
            "type": "string"
          },
          "nationality": {
            "type": "string",
            "description": "example Ghanian, Nigerian"
          },
          "documentNo": {
            "type": "string"
          },
          "documentExpirationDate": {
            "type": "string",
            "description": "should be of this format YYYY-MM-DD"
          },
          "country": {
            "type": "string",
            "description": "example Ghana, Nigeria, Kenya"
          },
          "documentName": {
            "type": "string",
            "description": "example PASSPORT, GOVERNMENT ID, VOTERS ID"
          }
        },
        "required": [
          "kycId",
          "nationality",
          "documentNo",
          "documentExpirationDate",
          "country",
          "documentName"
        ]
      },
      "IntegratorKycUsersResponseDto": {
        "type": "object",
        "properties": {
          "kycId": {
            "type": "string"
          },
          "kycVerified": {
            "type": "boolean"
          },
          "basicDetails": {
            "type": "object",
            "properties": {
              "userEmail": {
                "type": "string"
              },
              "customerKey": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "dob": {
                "type": "string",
                "description": "should be of this format YYYY-MM-DD"
              },
              "gender": {
                "type": "string",
                "enum": [
                  "M",
                  "F"
                ]
              },
              "country": {
                "type": "string",
                "description": "example GH,KE,NG"
              },
              "phone": {
                "type": "string"
              }
            },
            "required": [
              "userEmail",
              "customerKey",
              "firstName",
              "lastName",
              "dob",
              "gender",
              "country",
              "phone"
            ]
          },
          "address": {
            "type": "object",
            "properties": {
              "kycId": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "town": {
                "type": "string"
              },
              "country": {
                "type": "string",
                "description": "example GH,KE,NG"
              }
            },
            "required": [
              "kycId",
              "street",
              "town",
              "country"
            ]
          },
          "document": {
            "type": "object",
            "properties": {
              "kycId": {
                "type": "string"
              },
              "nationality": {
                "type": "string",
                "description": "example Ghanian, Nigerian"
              },
              "documentNo": {
                "type": "string"
              },
              "documentExpirationDate": {
                "type": "string",
                "description": "should be of this format YYYY-MM-DD"
              },
              "country": {
                "type": "string",
                "description": "example Ghana, Nigeria, Kenya"
              },
              "documentName": {
                "type": "string",
                "description": "example PASSPORT, GOVERNMENT ID, VOTERS ID"
              }
            },
            "required": [
              "kycId",
              "nationality",
              "documentNo",
              "documentExpirationDate",
              "country",
              "documentName"
            ]
          }
        },
        "required": [
          "kycId",
          "kycVerified",
          "basicDetails",
          "address",
          "document"
        ]
      },
      "WithdrawRequestResponseDto": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "Request Id"
          },
          "escrow_address": {
            "type": "string",
            "description": "Senders amount"
          },
          "bolt11": {
            "type": "string",
            "description": "Bolt11 invoice"
          }
        },
        "required": [
          "request_id",
          "escrow_address"
        ]
      },
      "WithdrawRequestDto": {
        "type": "object",
        "properties": {
          "senders_address": {
            "type": "string",
            "description": "senders address"
          },
          "senders_amount": {
            "type": "number",
            "description": "Senders amount"
          },
          "chain": {
            "type": "string",
            "description": "supported chain",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA"
            ]
          },
          "token": {
            "type": "string",
            "description": "supported token",
            "enum": [
              "CUSD",
              "USDC",
              "USDT",
              "SAT",
              "BTC",
              "HASH",
              "FUSE",
              "HBAR",
              "USDGLO"
            ]
          }
        },
        "required": [
          "senders_address",
          "senders_amount",
          "chain",
          "token"
        ]
      },
      "WithdrawPreviewResponseDto": {
        "type": "object",
        "properties": {
          "transaction_amount": {
            "type": "number"
          },
          "usd_amount": {
            "type": "number"
          },
          "transaction_cost": {
            "type": "number"
          },
          "transaction_cost_type": {
            "type": "string",
            "enum": [
              "CUSTOM",
              "DEFAULT",
              "BILL_ON_INTEGRATOR",
              "BILL_AFTER_TRANSACTION",
              "BILL_ON_INVOICE"
            ]
          },
          "local_currency_amount": {
            "type": "number"
          },
          "rates": {
            "type": "object",
            "example": {
              "from": "USD",
              "to": "GHS",
              "value": "11.99"
            }
          }
        },
        "required": [
          "transaction_amount",
          "usd_amount",
          "transaction_cost",
          "transaction_cost_type",
          "local_currency_amount",
          "rates"
        ]
      },
      "WithdrawMobileMoneyOnChainDto": {
        "type": "object",
        "properties": {
          "transaction_hash": {
            "type": "string",
            "description": "The transaction hash"
          },
          "chain": {
            "type": "string",
            "description": "supported chain",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA"
            ]
          },
          "token": {
            "type": "string",
            "description": "supported token",
            "enum": [
              "CUSD",
              "USDC",
              "USDT",
              "SAT",
              "BTC",
              "HASH",
              "FUSE",
              "HBAR",
              "USDGLO"
            ]
          },
          "wallet_id": {
            "type": "string",
            "description": "Should Be Fiat Wallet Id"
          },
          "preview": {
            "type": "boolean",
            "description": "The preview"
          },
          "customer_key": {
            "type": "string",
            "description": "The customer key"
          },
          "request_id": {
            "type": "string",
            "description": "request id obtained from Generate Offramp Request api"
          },
          "callback_url": {
            "type": "string",
            "description": "The callback url"
          },
          "referenceId": {
            "type": "string"
          }
        },
        "required": [
          "transaction_hash",
          "chain",
          "token",
          "wallet_id",
          "customer_key",
          "request_id"
        ]
      },
      "CreateDepositMobileMoneyOnChainDto": {
        "type": "object",
        "properties": {
          "public_address": {
            "type": "string",
            "description": "The transaction public address"
          },
          "chain": {
            "type": "string",
            "description": "supported chain",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA"
            ]
          },
          "token": {
            "type": "string",
            "description": "supported token",
            "enum": [
              "CUSD",
              "USDC",
              "USDT",
              "SAT",
              "BTC",
              "HASH",
              "FUSE",
              "HBAR",
              "USDGLO"
            ]
          },
          "wallet_id": {
            "type": "string",
            "description": "The wallet id"
          },
          "amount": {
            "type": "number",
            "description": "The amount to deposit"
          },
          "customer_key": {
            "type": "string",
            "description": "The customer key"
          },
          "callback_url": {
            "type": "string",
            "description": "The callback url"
          },
          "reference_id": {
            "type": "string",
            "description": "Optional reference id"
          }
        },
        "required": [
          "chain",
          "token",
          "wallet_id",
          "amount",
          "customer_key"
        ]
      },
      "DepositMobileMoneyOnchainResponse": {
        "type": "object",
        "properties": {
          "public_address": {
            "type": "string",
            "description": "The transaction public address"
          },
          "chain": {
            "type": "string",
            "description": "supported chain",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA"
            ]
          },
          "token": {
            "type": "string",
            "description": "supported token",
            "enum": [
              "CUSD",
              "USDC",
              "USDT",
              "SAT",
              "BTC",
              "HASH",
              "FUSE",
              "HBAR",
              "USDGLO"
            ]
          },
          "reference_id": {
            "type": "string",
            "description": "Optional reference id"
          },
          "crypto_amount": {
            "type": "string",
            "description": "crypto amount"
          },
          "transaction_hash": {
            "type": "string",
            "description": "transaction hash"
          },
          "status": {
            "type": "string",
            "description": "transaction status",
            "enum": [
              "PENDING",
              "SUCCESSFUL",
              "FAILED",
              "CANCELLED",
              "REVERSED",
              "IN_PROGRESS",
              "DUPLICATE",
              "ERROR_OCCURRED"
            ]
          },
          "crypto_received_status": {
            "type": "string",
            "description": "crypto received status",
            "enum": [
              "PENDING",
              "SUCCESSFUL",
              "FAILED",
              "CANCELLED",
              "REVERSED",
              "IN_PROGRESS",
              "DUPLICATE",
              "ERROR_OCCURRED"
            ]
          }
        },
        "required": [
          "chain",
          "token"
        ]
      },
      "OnchainDepositResponse": {
        "type": "object",
        "properties": {
          "mobile_money": {
            "description": "mobile money status",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "deposit id",
                    "example": "5f9b2c7b9c9d6b0017b4e6b1"
                  },
                  "amount": {
                    "type": "number",
                    "description": "amount to deposit",
                    "example": 10
                  },
                  "wallet_id": {
                    "type": "string",
                    "description": "deposit id",
                    "example": "5f9b2c7b9c9d6b0017b4e6b1"
                  },
                  "callback_url": {
                    "type": "string",
                    "description": "callback url",
                    "example": "https://example.com"
                  },
                  "reference_id": {
                    "type": "string",
                    "description": "reference id",
                    "example": "5f9b2c7b9c9d6b0017b4e6b1"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "PENDING",
                      "SUCCESSFUL",
                      "FAILED",
                      "CANCELLED",
                      "REVERSED",
                      "IN_PROGRESS",
                      "DUPLICATE",
                      "ERROR_OCCURRED"
                    ]
                  },
                  "reference_number": {
                    "type": "number"
                  },
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "transaction_cost": {
                    "type": "number"
                  },
                  "transaction_amount": {
                    "type": "number"
                  },
                  "customer_key": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "amount",
                  "wallet_id",
                  "status",
                  "reference_number",
                  "created_at",
                  "transaction_cost",
                  "transaction_amount",
                  "customer_key"
                ]
              }
            ]
          },
          "onchain": {
            "description": "onchain status",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "public_address": {
                    "type": "string",
                    "description": "The transaction public address"
                  },
                  "chain": {
                    "type": "string",
                    "description": "supported chain",
                    "enum": [
                      "ETHEREUM",
                      "CELO",
                      "AVALANCHE",
                      "POLYGON",
                      "ARBITRUM",
                      "OPTIMISM",
                      "STELLAR",
                      "TRON",
                      "FUSE",
                      "LIGHTNING",
                      "SOLANA",
                      "PROVENANCE",
                      "CARDANO",
                      "HEDERA"
                    ]
                  },
                  "token": {
                    "type": "string",
                    "description": "supported token",
                    "enum": [
                      "CUSD",
                      "USDC",
                      "USDT",
                      "SAT",
                      "BTC",
                      "HASH",
                      "FUSE",
                      "HBAR",
                      "USDGLO"
                    ]
                  },
                  "reference_id": {
                    "type": "string",
                    "description": "Optional reference id"
                  },
                  "crypto_amount": {
                    "type": "string",
                    "description": "crypto amount"
                  },
                  "transaction_hash": {
                    "type": "string",
                    "description": "transaction hash"
                  },
                  "status": {
                    "type": "string",
                    "description": "transaction status",
                    "enum": [
                      "PENDING",
                      "SUCCESSFUL",
                      "FAILED",
                      "CANCELLED",
                      "REVERSED",
                      "IN_PROGRESS",
                      "DUPLICATE",
                      "ERROR_OCCURRED"
                    ]
                  },
                  "crypto_received_status": {
                    "type": "string",
                    "description": "crypto received status",
                    "enum": [
                      "PENDING",
                      "SUCCESSFUL",
                      "FAILED",
                      "CANCELLED",
                      "REVERSED",
                      "IN_PROGRESS",
                      "DUPLICATE",
                      "ERROR_OCCURRED"
                    ]
                  }
                },
                "required": [
                  "chain",
                  "token"
                ]
              }
            ]
          }
        },
        "required": [
          "mobile_money",
          "onchain"
        ]
      },
      "WithdrawOnchainWalletPreviewResponseDto": {
        "type": "object",
        "properties": {
          "transactionCostInFiat": {
            "type": "number"
          },
          "transactionAmountInFiat": {
            "type": "number"
          },
          "transactionAmountInUsd": {
            "type": "number"
          },
          "transactionAmountInUsdRate": {
            "type": "object"
          },
          "amountInFiat": {
            "type": "number"
          },
          "amountInFiatRate": {
            "type": "object"
          }
        },
        "required": [
          "transactionCostInFiat",
          "transactionAmountInFiat",
          "transactionAmountInUsd",
          "transactionAmountInUsdRate",
          "amountInFiat",
          "amountInFiatRate"
        ]
      },
      "WithdrawOnchainWalletResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "transaction_hash": {
            "type": "string"
          },
          "reference_id": {
            "type": "string"
          },
          "reference_number": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "transaction_hash",
          "reference_id",
          "reference_number"
        ]
      },
      "WithdrawWalletOnchainDto": {
        "type": "object",
        "properties": {
          "source_wallet": {
            "type": "string",
            "description": "source wallet, should be fiat wallet"
          },
          "receivers_address": {
            "type": "string",
            "description": "receivers address"
          },
          "amount": {
            "type": "number",
            "description": "Senders amount"
          },
          "chain": {
            "type": "string",
            "description": "supported chain",
            "enum": [
              "ETHEREUM",
              "CELO",
              "AVALANCHE",
              "POLYGON",
              "ARBITRUM",
              "OPTIMISM",
              "STELLAR",
              "TRON",
              "FUSE",
              "LIGHTNING",
              "SOLANA",
              "PROVENANCE",
              "CARDANO",
              "HEDERA"
            ]
          },
          "token": {
            "type": "string",
            "description": "supported token",
            "enum": [
              "CUSD",
              "USDC",
              "USDT",
              "SAT",
              "BTC",
              "HASH",
              "FUSE",
              "HBAR",
              "USDGLO"
            ]
          },
          "preview": {
            "type": "boolean",
            "description": "preview, set preview to true to get transaction data with rates"
          },
          "callback_url": {
            "type": "string",
            "description": "callback url"
          }
        },
        "required": [
          "source_wallet",
          "receivers_address",
          "amount",
          "chain",
          "token",
          "callback_url"
        ]
      }
    }
  }
}